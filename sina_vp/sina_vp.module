<?php
/**
 * @author dale
 * @version $Id$
 * @copyright dale
 * @package sina
 */

/**
 * @file
 * This is an sina_open module extended.
 */
module_load_include('inc', 'node', 'node.pages');//调用节点发布相关

/**
 * Implementation of hook_node_info().
 * Define module-provided node types.
 */
function sina_vp_node_info() {
  $items = array(
    'weibo' => array(
      'name' => t('weibo'),
      'module' => 'sina',
      'description' => 'weibo note type',
      'has_title' => '1',
      'title_label' => t('Title'),
      'has_body' => '1',
      'body_label' => 'Body',
      'help' => 'sina_vp_node_info help',
      'node_options' => array (
        'status' => true,
        'promote' => false,
        'sticky' => false,
        'revision' => false,
      ),
      'comment' => '1',
    ),
  );
  return $items;
}
//If you implement this hook you MUST also implement a hook_form() 
//if you want that node type to appear in the content type list.
/*
 * Implementation of hook_form().
 * Display a node editing form. 
 */
function sina_vp_form(&$node, &$param) 
{
  $node_form = node_content_form($node, $form_state);
  return $node_form;
}

/*
 * Implementation of hook_nodeapi().
 * Act on nodes defined by other modules.
 */
function sina_vp_nodeapi(&$node, $op) 
{ global $user;
	//copy form sina_open_nodeapi
	if ($op == 'insert' && variable_get('sina_open_node_'.$node->type, 1) && $node->sina_vp_open) {

      if (db_result(db_query('SELECT uid FROM {sina_open_user} WHERE uid = %d', $user->uid))) {
        $url = url('node/'.$node->nid, array('absolute' => true));
        
        sina_open_t_set_tweet2(//dale ,发布图片 add pram @$node->nid callback function sina.module
          $node->sina_vp_open['title'] ? $node->sina_vp_open['title'] : $node->title,
          url('node/'.$node->nid, array('absolute' => true))
		  		,$node //传递节点 dale
        );
				//发布节点后不跳转node页 与简洁链接。dale
				// 需完善 参 http://www.ludou.org/get_current_page_url.html
				//$uri=preg_replace($patterns2, $replacements, $string);
				//str_replace('q=','',$_SERVER['QUERY_STRING']);
				//drupal_goto('vp/user_timeline');
      } else {
        drupal_set_message('您需要先绑定新浪微博帐号，才能够推送信息。', 'error');
      }
  }
  switch( $node->type )
  {
    case 'weibo':
      switch ($op) {
        case 'insert':
			  	$node->body=$node->title;	
		      drupal_write_record('node_revisions', $node, 'vid');	
          break;
        case 'update':
          $node->body=$node->title;	
	     		drupal_write_record('node_revisions', $node, 'vid');
          break;
        case 'delete':    
					$wid= sina_vp_get_wid($node->nid);
					$request_url="http://api.t.sina.com.cn/statuses/destroy/$wid.json"; 
					$result = sina_open_t_set_request($request_url);
					db_query("DELETE FROM {sina_vp_weibo2node} WHERE nid = %d", $node->nid); 	
					if ($result->code == 200) {
						drupal_set_message($message = '同步删除成功！', $type = 'status', $repeat = TRUE);
						if(function_exists(dpm)) dpm(json_decode($result->data));			
					} else {
						drupal_set_message($message = '同步删除失败！', $type = 'warning', $repeat = TRUE);
						return false;
					}	       
          break;
        case 'prepare':
          //
          break;
        case 'load':
          break;
        case 'view':
          break;
				case 'alter':
					//sina_vp_context_preprocess(&$node);
          break;
      }
      break;
	//发布任务跳转列表页
	case 'story':
		 switch ($op) {
	        case 'insert':
		      	drupal_goto('tasklist');	
	          break;
	        case 'update':
	          drupal_goto('tasklist');
	          break;
			 }
	break;
  }
}
/**
 * @Implement of hook_comment()
 * copy form sina_open_comment()
 */
function sina_vp_comment(&$comment, $op) {
  if ($op == 'insert' && isset($comment['sina_vp_open']) && variable_get('sina_open_comment', 1)) {
    if($comment['sina_vp_open']) {
      sina_open_t_set_tweet2(
        $comment['subject'],
        url('node/'.$comment['nid'], array('absolute' => true, 'fragment' => 'comment-'. $comment['cid']))
				,$comment //dale 新添comment
      );
    }
  }
}
/**
 * Implementation of hook_perm().
 */
function sina_vp_perm(){
  return array(
		'add new product',//新产品
		'add new activity',//活动
		'add new special',//爆款
		'add new sale',
		'add new transfer',//发布转让信息
		'add new show',//真人秀
		'add new forward',//转发权
		'view my follows', //查看粉丝
		
		'add new Seller info',//卖家权限
		'add new Buyer info',//买家权限
	);
}

/**
 * Implementation of hook_access().
 * del=true

function sina_vp_access($op, $node, $account) {
  switch ($op) {
    case 'create':
      // Anonymous users cannot post even if they have the permission. 
      return user_access('create weibo entries', $account) && $account->uid ? TRUE : NULL;
    case 'update':
      return user_access('edit any weibo entry', $account) || (user_access('edit own weibo entries', $account) && ($node->uid == $account->uid)) ? TRUE : NULL;
    case 'delete':
      return user_access('delete any weibo entry', $account) || (user_access('delete own weibo entries', $account) && ($node->uid == $account->uid)) ? TRUE : NULL;
  }
} */
function sina_vp_init(){
  //drupal_add_css(drupal_get_path('module', 'sina_vp') .'/css/sina.user.page.css');
	
	drupal_add_css(drupal_get_path('module', 'sina_vp') .'/css/highslide.css');
	drupal_add_js(drupal_get_path('module', 'sina_vp') .'/js/highslide.js');
	drupal_add_js(drupal_get_path('module', 'sina_vp') .'/js/highslide-extra.js');
	
	drupal_add_js(drupal_get_path('module', 'sina_vp') .'/js/jquery.lazyload.mini.js');
	drupal_add_js(drupal_get_path('module', 'sina_vp') .'/js/jquery.lazyload-extra.js');	
	//twitter 样式表
	//drupal_add_css(drupal_get_path('module', 'sina_vp') .'/css/bootstrap.min.css');
}
/**
 * Implementation of hook_menu().
 */
function sina_vp_menu() {
	global $user;
	$items['vp'] = array(
		'title' => t('Vp'),//'menu_name' => 'primary-links',
		'page callback' => 'sina_vp_public_timeline',
		'access callback' => TRUE,
		'file' => 'sina_vp.pages.inc',
		'weight' => -20,
  );
	$items['vp/public_timeline'] = array(
    'title' => t('public_timeline'),//'menu_name' => 'Secondary_links',
    'page callback' => 'sina_vp_public_timeline',
    'access callback' => TRUE,
    //'access callback' => 'create weibo entries',
    //'access arguments'=>  array('create weibo entries'),
    'description' => t('public_timeline'),
    'file' => 'sina_vp.pages.inc',
    'weight' => -20,
		'type' => MENU_LOCAL_TASK,		
		//'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  /*$items['vp/user_timeline'] = array(
    'title' => t('user_timeline'),//'menu_name' => 'Secondary_links',
    'page callback' => 'sina_vp_user_timeline',
    'access callback' => TRUE,
    'description' => t('public_timeline'),
    'file' => 'sina_vp.pages.inc',
    'weight' => -20,
		'type' => MENU_LOCAL_TASK,
  );
	$items['vp/friend_timeline'] = array(
    'title' => t('friend_timeline'),//'menu_name' => 'Secondary_links',
    'page callback' => 'sina_vp_friend_timeline',
    'access callback' => TRUE,
    'description' => t('friend_timeline'),
    'file' => 'sina_vp.pages.inc',
    'weight' => -19,
		'type' => MENU_LOCAL_TASK,
  );
	$items['shop/%'] = array( //shop/uid|shop_name
    'title callback' => 'user_shop_title',//不同店长角色的user店铺名称
    'title arguments' => array(1),
    'page callback' => 'sina_vp_user_timeline',
    'access arguments' => array('view shops'),
    'description' => '我的店铺',
    'file' => 'sina_vp.pages.inc',
    'weight' => -20,
		//'type' => MENU_DEFAULT_LOCAL_TASK,
  );*/
  $items['vp/weibo_page_default/comment_ahah_callback/%'] = array(//评论
    'page callback' => 'weibo_page_default_callback',
    'page arguments' => array(3),
    'access callback' => TRUE,
    'file' => 'sina_comment_ahah.inc',
    'type' => MENU_CALLBACK,
  );

	//根据term 动态生成不同的频道。
	//获取$vocabulary = 微博频道  下 $parent = Seller|Buyer 的所有term
	$vocabularies = taxonomy_get_vocabularies(t('weibo'));
	$vid ='';
	foreach($vocabularies as $key=>$vocabulary){
		if($vocabulary->name == t('微博频道')) {
			$vid = $key;
		}
	}
	$Seller_tid = taxonomy_get_term_by_name(t('Seller'));
	$parent = $Seller_tid['0']->tid; //22
	$Seller_taxonomy_tree=taxonomy_get_tree($vid, $parent, $depth = -1, $max_depth = NULL);
	foreach($Seller_taxonomy_tree as $term){
		$items["new/$term->tid"] = array(//卖家发布信息
    'title' => $term->name,
    'page callback' => 'sina_vp_new',
    'page arguments' => array(1),
    'access callback' => 'user_access',
    'access arguments' => array('add new Seller info'),
    'file' => 'sina_vp.pages.inc',
		'type' => MENU_CALLBACK,
 	 );	
	}
	$Buyer_tid = taxonomy_get_term_by_name(t('Buyer'));
	$parent = $Buyer_tid['0']->tid; //23
	$Buyer_taxonomy_tree=taxonomy_get_tree($vid, $parent, $depth = -1, $max_depth = NULL);
	foreach($Buyer_taxonomy_tree as $term){
		$items["new/$term->tid/%"] = array(//vp/add/Transfer/% 买家发布信息
    'title' => $term->name,
    'page callback' => 'sina_vp_new',
    'page arguments' => array(1,2),
    'access callback' => 'user_access',
    'access arguments' => array('add new Buyer info'),
    'file' => 'sina_vp.pages.inc',
		'type' => MENU_NORMAL_ITEM,
 	 );	
	}
	//新品，活动，爆款，特卖，转让，真人秀
  $items['forward/%/%'] = array(//转发 tid/nid
    'title' => t('分享'),
    'page callback' => 'sina_vp_new_forward',
    'page arguments' => array(1,2),
    'access callback' => 'user_access',
    'access arguments' => array('add new forward'),
    'description' => '转发分享',
    'file' => 'sina_vp.pages.inc',
    'weight' => -15,
		'type' => MENU_CALLBACK,
  );
	/////买家或卖家中心，根据角色而定
	$items['UCenter'] = array(
    'title' => t('我的微铺街'),
    'page callback' => 'sina_UCenter_page',
    'access callback' => TRUE,
    'description' => '我的微铺街',
    'file' => 'sina_vp.pages.inc',
    'weight' => -15,
		'type' => MENU_NORMAL_ITEM,
  );
	$items['UCenter/All'] = array(
    'title' => t('我的微铺街'),
    'access callback' => TRUE,
		'type' => MENU_DEFAULT_LOCAL_TASK,
  );
	foreach($Seller_taxonomy_tree as $term){
		$items["UCenter/$term->tid"] = array(
    'title' => $term->name,
    'page callback' => 'sina_UCenter_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'sina_vp.pages.inc',
    'weight' => $term->weight,
    'description' => '我关注的'.$term->name,
		'type' => MENU_NORMAL_ITEM|MENU_LOCAL_TASK,
 	 );	
	}
	foreach($Buyer_taxonomy_tree as $term){
		$items["UCenter/$term->tid"] = array(//my转让潮 my真人秀
    'title' => 'my'.$term->name,
    'page callback' => 'sina_UCenter_page',
    'page arguments' => array(1),    
    'access arguments' => array('add new Buyer info'),
    'file' => 'sina_vp.pages.inc',
    'weight' => $term->weight+20,
		'description' => '我关注的'.$term->name,
		'type' => MENU_NORMAL_ITEM|MENU_LOCAL_TASK,
		'hidden' => 1,
 	 );	
	}
	///
	$items['VpCenter'] = array(
    'title' => t('微铺街'),
    'page callback' => 'sina_VpCenter_page',
    'access callback' => TRUE,
    'description' => '微铺街',
    'file' => 'sina_vp.pages.inc',
    'weight' => -15,
		'type' => MENU_NORMAL_ITEM,
		'menu_name' => 'primary-links',
  );
	$items['VpCenter/All'] = array(
    'title' => t('微铺大厅'),
    'description' => '微铺大厅',
    'weight' => -15,
		'type' => MENU_DEFAULT_LOCAL_TASK,
  );
	foreach($Seller_taxonomy_tree as $term){
		$items["VpCenter/$term->tid"] = array(
    'title' => $term->name,
    'page callback' => 'sina_VpCenter_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'sina_vp.pages.inc',
    'weight' => $term->weight,
		'type' => MENU_NORMAL_ITEM|MENU_LOCAL_TASK,
 	 );	
	}
	
	$items['Transfer'] = array(
    'title' => t('转让潮'),
    'page callback' => 'sina_vp_BuyCenter',
    'page arguments' => array('5'),
    'access callback' => TRUE,
    'description' => '转让潮',
    'file' => 'sina_vp.pages.inc',
    'weight' => -15,
    'menu_name' => 'primary-links',
  );
	$items['Show'] = array(
    'title' => t('真人秀'),
    'page callback' => 'sina_vp_BuyCenter',
    'page arguments' => array('6'),
    'access callback' => TRUE,
    'description' => '真人秀',
    'file' => 'sina_vp.pages.inc',
    'weight' => -15,
    'menu_name' => 'primary-links',
  );
	//个人中心 菜单项
	//用户关系user_relationships
	//module_load_include('inc', 'relationships', 'user_relationships_ui.pages');//调用节点发布相关
	//drupal_get_path('module', 'relationships').
  $items['relationships/follows'] = array(
    'title'             => '我的粉丝',
    'title callback'  => 'relationships_follows_title_callback',
    'title arguments'  => array('300'),//$rtid=
    'access callback' => 'user_access',
    'access arguments' => array('view my follows'),
    //'access callback'   => 'user_relationships_ui_check_access',
    //'access arguments'  => array('edit'),
    'type'              => MENU_NORMAL_ITEM,
    'weight'            => -9,
    'page callback'     => 'user_relationships_page0',
    //'page arguments'    => array(NULL, 1),
    //'file'              => 'user_relationships_ui.pages.inc',
  );
	//
		
	$items['ahah_callback/collapse_node_view'] = array(//隐藏节点显示
    'page callback' => 'collapse_node_view',
    'access callback' => TRUE,
    'file' => 'sina_vp.pages.inc',
    'type' => MENU_CALLBACK,
  );
		
	$items['ahah_callback/show_more'] = array(//隐藏节点显示
    'page callback' => 'show_more_node_view',
    'access callback' => TRUE,
    'file' => 'sina_vp.pages.inc',
    'type' => MENU_CALLBACK,
  );
	return $items;
}
function user_relationships_page00(){ //暂时用这个
	global $user;
	return t('我的粉丝数量').user_relationships_load(array("requestee_id" => $user->uid),array("count" => TRUE));
}
function user_relationships_page0($account = NULL){ //暂时用这个

	if (!$account) {
    global $user;
    $account = $user;
   }

	$relationships = get_follows();
	//if(template_preprocess_user_relationships0(&$variables))
	{
	 foreach ($relationships as $relationship) {
	 dpm($relationship);
     $edit_access = ($user->uid == $account->uid && user_access('maintain own relationships')) || user_access('administer users');
	 //$this_user_str  = $account->uid == $relationship->requestee_id ? 'requester' : 'requestee';
	 $this_user      = $relationship->requestee_id;
	 $row = array(
	      theme('username', $this_user),
	      ur_tt("user_relationships:rtid:$relationship->rtid:name", $relationship->name) . t(' (You to Them)'),
	      $relationship->extra_for_display,
	      $edit_access ? theme('user_relationships_remove_link', $account->uid, $relationship->rid) : '&nbsp;',
	    );
		
		$rows[] = $row;
	 }
	    $output = theme('table', array(), $rows, array('class' => 'user-relationships-listing-table'));
	    //theme('pager', NULL, $relationships_per_page);
		return t('我的粉丝数量').user_relationships_load(array("requestee_id" => $user->uid),array("count" => TRUE)).$output;
	}
   
	
	// if(empty($array)){
		// $follows_uid[] ='1';//没有粉丝....
	// }
	
	// $Id: user_relationships.tpl.php,v 1.1.2.10 2009/10/15 15:23:26 aufumy Exp $
	//$relationships array is loaded in template_preprocess_user_relationships()
	 
	  // foreach ($relationships as $relationship) {
	    // $edit_access = ($user->uid == $account->uid && user_access('maintain own relationships')) || user_access('administer users');
// 	
	    // $this_user_str  = $account->uid == $relationship->requestee_id ? 'requester' : 'requestee';
	    // $this_user      = $relationship->{$this_user_str};
// 	
	    // $row = array(
	      // // theme('username', $this_user),
	      // // ur_tt("user_relationships:rtid:$relationship->rtid:name", $relationship->name) . ($relationship->is_oneway ? ($this_user_str == 'requestee' ? t(' (You to Them)') : t(' (Them to You)')) : NULL),
	      // // $relationship->extra_for_display,
	      // // $edit_access ? theme('user_relationships_remove_link', $account->uid, $relationship->rid) : '&nbsp;',
	    // );
	    // if (variable_get('user_relationships_show_user_pictures', 0)) {
	      // array_unshift($row, theme('user_picture', $this_user)); 
	    // }
	    // $rows[] = $row;
	  // }
// 	
	  // print
	    // theme('table', array(), $rows, array('class' => 'user-relationships-listing-table')) .
	    // theme('pager', NULL, $relationships_per_page);
	
	
}
function template_preprocess_user_relationships0(&$variables) {
 
  global $user;
  // readability
  $account  = $variables['account'];
 
  $results=user_relationships_load(array("requestee_id" => $uid),array("sort" => 'requester_id',"include_user_info" => TRUE));
  $variables['relationships']=array();
  foreach ($results as $relationship) {
  	drupal_set_message($relationship);
    user_relationships_api_translate_user_info($relationship);
    $variables['relationships'][$relationship->rid] = $relationship;
  }


	return $relationships;
}
function relationships_follows_title_callback($rtid = NULL) {
  global $user;
	if($rtid)$count = user_relationships_load(array("user" => $user->uid,"rtid" => $rtid),array("count" => TRUE));
	if($rtid==300)$count = user_relationships_load(array("requestee_id" => $user->uid),array("count" => TRUE));
	//dpm(user_relationships_load(array("user" => $user->uid),array("count" => TRUE)),'关注');
	//dpm(user_relationships_load(array("user" => $user->uid,"rtid" => '2'),array("count" => TRUE)),'关注的卖家');
	//dpm(user_relationships_load(array("user" => $user->uid,"rtid" => '1'),array("count" => TRUE)),'关注的买家');
	//dpm(user_relationships_load(array("requestee_id" => $user->uid),array("count" => TRUE)),'关注我的');	
  if ($count > 0) {
    //return format_plural($count, 'Messages (1 new)', '我的粉丝 (@count new)');
  }
	switch ($rtid) {
		case '300':
			  return t('我的粉丝(').$count.')';
			break;
		case '1':
			  return t('我的关注(').$count.')';
			break;
		case '2':
		  return t('我关注的买家(').$count.')';
		break;
		default:
			return t('有错误吧！');
			break;
	}

}
function sina_vp_menu_alter(&$items) {
	global $user;
	if(in_array('Seller',$user->roles)&&0){
		//对于卖家，个人中心不显示  my转让   my真人秀
		$vocabularies = taxonomy_get_vocabularies(t('weibo'));
		$vid ='';
		foreach($vocabularies as $key=>$vocabulary){
			if($vocabulary->name == t('微博频道')) {
				$vid = $key;
			}
		}
		$Buyer_tid = taxonomy_get_term_by_name(t('Buyer'));
		$parent = $Buyer_tid['0']->tid; //23
		$Buyer_taxonomy_tree=taxonomy_get_tree($vid, $parent, $depth = -1, $max_depth = NULL);
		foreach($Buyer_taxonomy_tree as $term){dpm($term,$term->tid);
		$items['UCenter/'.$term->tid]['access arguments'] = array('add new Buyer info');
		}
		//隐藏卖家的     我的关注(0)    我关注的买家(1)只显示 关注 我的粉丝  ????css
		//include_once(drupal_get_path('module', 'user_relationships_api') .'/user_relationships_api.module');
		//foreach (user_relationships_types_load() as $rtid => $relationship) {
		//	$items["relationships/{$rtid}"]['access callback'] = 'user_access';
		//	$items["relationships/{$rtid}"]['access arguments'] = array('add new Buyer info');
		//	$items["relationships/{$rtid}"]['hidden']=1;
	  // }
	}
	//if($user->id==0)$items['UCenter']['access callback'] = FALSE;
		// Example - disable the page at node/add
  $items['node/add']['access callback'] = FALSE;
  $items['node/add/weibo']['access callback'] = FALSE;
	$items['vp/add/Transfer']['access callback'] = FALSE;
	$items['vp/add/Show']['access callback'] = FALSE;
	$items['messages']['hidden'] = 1;
	$items['relationships']['title'] = t('关系中心');
	$items['relationships'] = $items['relationships/follows'];
	//unset($items['relationships/list']);//ALL去掉，我的粉丝提前
	$items['relationships/list'] = $items['relationships/follows'];
	$items['relationships/list']['type'] = MENU_DEFAULT_LOCAL_TASK;
	$items['relationships/follows']['hidden'] = 1;
	include_once(drupal_get_path('module', 'user_relationships_api') .'/user_relationships_api.module');
	foreach (user_relationships_types_load() as $rtid => $relationship) {
    $items["relationships/{$rtid}"]['title callback'] = 'relationships_follows_title_callback';
		$items["relationships/{$rtid}"]['title arguments'] = array("$rtid");
  }
	/*
  $items['User/relationships'] = $items['relationships'];
	$items['User/relationships/list'] = $items['relationships/list'];
	module_load_include('inc', 'user_relationships_api','user_relationships_api');
	foreach (user_relationships_types_load() as $rtid => $relationship) {
	  $items["User/relationships/{$rtid}"] = $items["relationships/{$rtid}"];
		$items["User/relationships/{$rtid}"]['page arguments'] = array(NULL, 2);
	}*/
	//$items['user/my/relationships'] = $items['relationships'];
	//$items['user/my/messages'] = $items['messages'];
	//dpm(user_relationships_load(array("user" => $user->uid),array("count" => TRUE)),'关注总数');
	//dpm(user_relationships_load(array("user" => $user->uid,"rtid" => '2'),array("count" => TRUE)),'关注的卖家');
	//dpm(user_relationships_load(array("user" => $user->uid,"rtid" => '1'),array("count" => TRUE)),'关注的买家');
	//dpm(user_relationships_load(array("requestee_id" => $user->uid),array("count" => TRUE)),'关注我的');

}
/**
 * Menu item title callback - use the user name if it's not the current user.
 */
function user_shop_title($account) {
  if ($account->uid == $GLOBALS['user']->uid) {
    return t('My account');
  }
  return $account->name;
}
/**
 * 新添数据库记录关联节点，存储新浪微博元数据. 
 */
function sina_vp_type_preprocess($sina_vp_type){
	switch ($sina_vp_type) {
		case 'value':
			
			break;
		
		default:
			
			break;
	}
	
}

/**
 * weibo数据库写入.
 *
 * @param $data
 * 	新浪微博返回的json data.
 * @param $node
 *   节点或评论
 * @param $tid
 *   int weibo频道
 * @param $zid
 *   被转发/评论/秀/转让的节点nid
 */
function _sina_vp_db_write($data,$node,$tid=NUll,$zid=NULL){
		if(isset($node->type)){//if $node is a node 拥有type属性
			$nid = $node->nid;
			$cid = 0;
			$datas = $node->title;
		}elseif(isset($node[cid])){//if is $comment is_array &&cid属性
			$nid = $node[nid];
			$cid = $node[cid];
			$datas = $node[subject];
		}
		global $user;
		if(!empty($data)&&(!is_null($data))){//离线wdata字段为标题
			$wdata = json_decode($data);
			$datas = $data;
		}  
		$wid   = $wdata?$wdata->id:0;
		$created_at = $wdata->created_at?strtotime($wdata->created_at):time();
		db_query("INSERT INTO {sina_vp_weibo2node}
							(`nid` ,`uid` ,`cid`,`wid` ,`data`,`created_at`,`sina_vp_type`,`zid`)
							VALUES ('%d','%d','%d','%d','%s','%d','%d','%d')"
							,$nid,$user->uid,$cid,$wid,$datas,$created_at,$tid,$zid);
							//more... 是否需要分2个表 nid zid
}
/**
 * Implementation of hook_form_alter(). 
 * @Where sina_vp_open_set_tweet_form in sina_open.module
 * @Do before set_tweet ,insert into our Additional db_table sina_weibo2node info.
 */
function sina_vp_form_alter(&$form, $form_state, $form_id) {
/**
 * hidden other thing when post a new weibo (type) node..
 */
	if($form_id == 'weibo_node_form'){
		$form['comment_settings']['#access']=FALSE;	
		$form['menu']['#access']=FALSE;	
		$form['revision_information']['#access']=FALSE;	
		$form['buttons']['preview']['#access']=FALSE;	
		$form['author']['#access']=FALSE;
		$form['options']['#access']=FALSE;
		drupal_add_js(drupal_get_path('module', 'sina_vp') .'/sina_vp.js');
		drupal_add_css(drupal_get_path('module', 'sina_vp') .'/css/weibo-add.css','module','screen');
		$form['title'] = array(
		  '#type' => 'textarea',//textfield
		  '#description' => '请文明发言，还可以输入<strong id="sina_open_tweet_text_count"></strong>字',
		  '#title' => t('Title'),
		  '#default_value' => $form['title']['#default_value'],
		  '#maxlength' => 140,
		  //'#element_validate' =>array('sina_vp_weibo_length_validate'),
		  //'#prefix' => '<div id="weibo-add-page">',
  		//'#suffix' => '</div>',
		  //'#field_prefix' => 'users photo here',	  
		  //'#field_suffix' => t('MB')
		  '#required' => TRUE,
		  '#resizable' => FALSE,
		);
		$form['title']['#attributes'] = array('class' => 'publish-weibo');
		$form['flag']['#access']=FALSE;
		$form['body_field']['#access']=FALSE;				
		//$form['taxonomy']['#access']=FALSE;
		$form['taxonomy']['2']['#disabled']=TRUE;
	}
	if($form['sina_open'] && $form_id == 'weibo_node_form'){
		$form['add_option']=array(
			'#type' =>'item',
		    '#value' =>'<span id="face"><a class="facexy" href="javascript:;">表情</a></span>|<span id="img"><a onclick="">图片</a></span>|<span id="topic"><a class="topic"  href="javascript:;">话题</a></span>|<span id="atta">@TA</span>
			            	<div id="faceWrap" style="display:none;"><a href="javascript:;" title="[呵呵]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/eb/smile.gif"></a><a href="javascript:;" title="[嘻嘻]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/c2/tooth.gif"></a><a href="javascript:;" title="[哈哈]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/6a/laugh.gif"></a><a href="javascript:;" title="[爱你]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/7e/love.gif"></a><a href="javascript:;" title="[晕]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/a4/dizzy.gif"></a><a href="javascript:;" title="[泪]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d8/sad.gif"></a><a href="javascript:;" title="[馋嘴]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/b8/cz_org.gif"></a><a href="javascript:;" title="[抓狂]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/4d/crazy.gif"></a><a href="javascript:;" title="[哼]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/19/hate.gif"></a><a href="javascript:;" title="[可爱]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/9c/tz_org.gif"></a><a href="javascript:;" title="[怒]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/57/angry.gif"></a><a href="javascript:;" title="[汗]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/13/sweat.gif"></a><a href="javascript:;" title="[困]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/8b/sleepy.gif"></a><a href="javascript:;" title="[害羞]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/05/shame_org.gif"></a><a href="javascript:;" title="[睡觉]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/7d/sleep_org.gif"></a><a href="javascript:;" title="[钱]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/90/money_org.gif"></a><a href="javascript:;" title="[偷笑]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/7e/hei_org.gif"></a><a href="javascript:;" title="[酷]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/40/cool_org.gif"></a><a href="javascript:;" title="[衰]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/af/cry.gif"></a><a href="javascript:;" title="[吃惊]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/f4/cj_org.gif"></a><a href="javascript:;" title="[闭嘴]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/29/bz_org.gif"></a><a href="javascript:;" title="[鄙视]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/71/bs2_org.gif"></a><a href="javascript:;" title="[挖鼻屎]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/b6/kbs_org.gif"></a><a href="javascript:;" title="[花心]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/64/hs_org.gif"></a><a href="javascript:;" title="[鼓掌]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/1b/gz_org.gif"></a><a href="javascript:;" title="[失望]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/0c/sw_org.gif"></a><a href="javascript:;" title="[思考]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/e9/sk_org.gif"></a><a href="javascript:;" title="[生病]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/b6/sb_org.gif"></a><a href="javascript:;" title="[亲亲]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/8f/qq_org.gif"></a><a href="javascript:;" title="[怒骂]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/89/nm_org.gif"></a><a href="javascript:;" title="[太开心]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/58/mb_org.gif"></a><a href="javascript:;" title="[懒得理你]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/17/ldln_org.gif"></a><a href="javascript:;" title="[右哼哼]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/98/yhh_org.gif"></a><a href="javascript:;" title="[左哼哼]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/6d/zhh_org.gif"></a><a href="javascript:;" title="[嘘]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/a6/x_org.gif"></a><a href="javascript:;" title="[委屈]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/73/wq_org.gif"></a><a href="javascript:;" title="[吐]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/9e/t_org.gif"></a><a href="javascript:;" title="[可怜]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/af/kl_org.gif"></a><a href="javascript:;" title="[打哈气]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/f3/k_org.gif"></a><a href="javascript:;" title="[做鬼脸]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/88/zgl_org.gif"></a><a href="javascript:;" title="[握手]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/0c/ws_org.gif"></a><a href="javascript:;" title="[耶]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d9/ye_org.gif"></a><a href="javascript:;" title="[good]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d8/good_org.gif"></a><a href="javascript:;" title="[弱]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d8/sad_org.gif"></a><a href="javascript:;" title="[不要]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/c7/no_org.gif"></a><a href="javascript:;" title="[ok]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d6/ok_org.gif"></a><a href="javascript:;" title="[赞]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d0/z2_org.gif"></a><a href="javascript:;" title="[来]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/40/come_org.gif"></a><a href="javascript:;" title="[蛋糕]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/6a/cake.gif"></a><a href="javascript:;" title="[心]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/6d/heart.gif"></a><a href="javascript:;" title="[伤心]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/ea/unheart.gif"></a><a href="javascript:;" title="[钟]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d3/clock_org.gif"></a><a href="javascript:;" title="[猪头]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/58/pig.gif"></a><a href="javascript:;" title="[咖啡]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/64/cafe_org.gif"></a><a href="javascript:;" title="[话筒]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/1b/m_org.gif"></a><a href="javascript:;" title="[干杯]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/bd/cheer.gif"></a><a href="javascript:;" title="[绿丝带]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/b8/green.gif"></a><a href="javascript:;" title="[蜡烛]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/cc/candle.gif"></a><a href="javascript:;" title="[微风]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/a5/wind_org.gif"></a><a href="javascript:;" title="[月亮]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/b9/moon.gif"></a><a href="javascript:;" title="[织]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/41/zz2_org.gif"></a><a href="javascript:;" title="[围观]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/f2/wg_org.gif"></a><a href="javascript:;" title="[威武]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/70/vw_org.gif"></a><a href="javascript:;" title="[奥特曼]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/bc/otm_org.gif"></a><a href="javascript:;" title="[宅]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d7/z_org.gif"></a><a href="javascript:;" title="[帅]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/36/s2_org.gif"></a><a href="javascript:;" title="[跳舞花]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/70/twh_org.gif"></a><a href="javascript:;" title="[围脖]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/3f/weijin_org.gif"></a><a href="javascript:;" title="[温暖帽子]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/f1/wennuanmaozi_org.gif"></a><a href="javascript:;" title="[手套]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/72/shoutao_org.gif"></a><a href="javascript:;" title="[雪]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/00/snow_org.gif"></a><a href="javascript:;" title="[雪人]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d9/xx2_org.gif"></a><a href="javascript:;" title="[左抱抱]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/54/left_org.gif"></a><a href="javascript:;" title="[右抱抱]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/0d/right_org.gif"></a><a href="javascript:;" title="[礼物]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/c4/liwu_org.gif"></a><a href="javascript:;" title="[爱心传递]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/c9/axcd_org.gif"></a><a href="javascript:;" title="[照相机]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/33/camera_org.gif"></a><a href="javascript:;" title="[落叶]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/79/yellowMood_org.gif"></a><a href="javascript:;" title="[白云]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/ff/y3_org.gif"></a><a href="javascript:;" title="[给力]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/c9/geili_org.gif"></a></div>',
		);
		$form['sina_vp_open'] = array(
      '#type' => 'checkbox',
      '#title' => '同步到新浪',
      '#required' => true,
      '#default_value' => 1,
    );
		unset($form['sina_open']);
	}
	/**
	 * hidden  comment-form for weibo node
	 */
	$node = node_load($form[nid]['#value']);
	if(($form_id == 'comment_form')&&($node->type=='weibo')){
		$form['sina_vp_open'] = array(
      '#type' => 'checkbox',
      '#title' => '同步到新浪',
      '#required' => true,
      '#default_value' => 1,
    );
		unset($form['sina_open']);
		$form['comment_filter']['comment']['#type'] = 'textarea';
		$form['comment_filter']['comment']['#rows'] = '3';
		//$form['comment_filter']['comment']['#resizable'] = FALSE;
		$form['comment_filter']['comment']['#maxlength'] = '140';
		$form['_author']['#type']['#access']=FALSE;
		$form['comment_filter']['format']['#access']=FALSE;
		$form['comment_filter']['comment']['#description'] = '最多140个字符，中英文均算一个字符。还可以输入<strong id="sina_open_tweet_text_count"></strong>个字符。';
		$form['preview']['#type']['#access']=FALSE;
		//drupal_add_js(drupal_get_path('module', 'sina_vp') .'/sina_vp_comment.js');
	}

	if(($form_id == 'weibo_node_form' && arg(0)=='new')	||
		($form_id == 'weibo_node_form' && arg(0)=='forward') ){
		//new/$tid & forward/$tid/$nid分享转发表单默认处理
		$vocabularies = taxonomy_get_vocabularies(t('weibo'));
	  //$form = array('#tree' => TRUE);
	  foreach ($vocabularies as $vocabulary) {
	    if(check_plain($vocabulary->name)==t('微博频道')){
	    	$vid=$vocabulary->vid;
				break;
	    }
	  }
		$tid=arg(1);
		if($term = taxonomy_get_term($tid)){			
			$form['taxonomy'][$vid]['#default_value'] = $tid;
			$form['taxonomy'][$vid]['#description'] = $term->name;
			//博文类型
			$form['sina_vp_type'] = array(
				'#type' => 'value',
				'#default_value' =>$tid,
				'#access' => FALSE,
				'#description' => $term->name,
			);
		}
	}
		
	if(arg(0)=='forward' && $form_id == 'weibo_node_form'){ 
  	//转发api forward/$tid/139 不可以带图片
		$form['field_weibo_image']['#access']=FALSE;
	}
	if(FALSE){ 
  	//转让 可不可以带图片呢？？？ more...
		$form['field_weibo_image']['#access']=FALSE;
	}
	$dispalyNone_forms = array(
		'weibo_page_default',
		'devel_execute_block_form',
		'search_theme_form',
		'search_block_form',
		'devel_switch_user_form',
		'user_login_block','profile_field_form','hidden_node_form'
	);
	if(in_array($form_id, $dispalyNone_forms)){
		//donothing...
	}else{
		//if(function_exists(dpm)) dpm($form,$form_id);
	}
  return $form;
}
/**
 * weibo type taxonomy termid 2=微薄频道下的  (1-6)新品，活动，爆款，特卖，转让，真人秀
 * @param $sina_vp_type
 *   int
 * @return
 *   string
 */
function sina_vp_get_type_by_int($sina_vp_type){
	if(is_int($sina_vp_type)){
		switch ($sina_vp_type) {
			case '1':
				$sina_vp_type = 'Product';
				break;
			case '2':
				$sina_vp_type = 'Activity';
				break;
			case '3':
				$sina_vp_type = 'Special';
				break;
			case '4':
				$sina_vp_type = 'Sale';
				break;
			case '5':
				$sina_vp_type = 'Transfer';
				break;
			case '6':
				$sina_vp_type = 'Show';
				break;
			default:
				drupal_set_message('2011:no get_sina_vp_type.','error');
				break;
		}
	}
	return $sina_vp_type;
}
/**
 * weibo type taxonomy termid 2=微薄频道下的  (1-6)新品，活动，爆款，特卖，转让，真人秀
 * @param $sina_vp_type
 *   string
 * @return
 *   int
 */
function sina_vp_get_type_by_string($sina_vp_type){
	if(is_string($sina_vp_type)){
		switch ($sina_vp_type) {
			case 'Product':
				$sina_vp_type = 1;
				break;
			case 'Activity':
				$sina_vp_type = 2;
				break;
			case 'Special':
				$sina_vp_type = 3;
				break;
			case 'Sale':
				$sina_vp_type = 4;
				break;
			case 'Transfer':
				$sina_vp_type = 5;
				break;
			case 'Show':
				$sina_vp_type = 6;
				break;
			default:
				drupal_set_message('no get_sina_vp_type','error');
				break;
		}
	}
	return $sina_vp_type;
}
/**
  * @return
 *   string
 */
function sina_vp_get_type_by_node($nid){
	$node = node_load($nid);
	foreach($node->taxonomy as $key=>$value){
		return sina_vp_get_type_by_int($key);
	};
}
/**
 * hook_link_alter
 */
function sina_vp_link_alter(&$links, $node, $comment=NULL){
	global $user;
	if($node->uid!=$user->uid && $node->type == 'weibo'){
		foreach($node->taxonomy as $key=>$value){
			$tid = $key;
		};
		if(user_access('add new forward')){		//转发分享  	forward/%/%
			$links['forward_link'] = array(
		    'title' => t('分享'), 
		    'href' => 'forward/'.$tid.'/'.$node->nid, 
		    //'query' => 'redirect=node', 
		    //'fragment' => 'anchorname', 
		    'attributes' => array('title' => t('分享给新浪和你的朋友')),
	  	);
		}
		
		$parents_taxonomy = taxonomy_get_parents($tid);
		foreach($parents_taxonomy as $key=>$value){
			$p_tid = $key;
			$Buyer_tid = taxonomy_get_term_by_name(t('Buyer'));
			if($p_tid!=$Buyer_tid['0']->tid){
				$donext=TRUE;// 转让和分享不能再秀了！～
			}
		};

			$vocabularies = taxonomy_get_vocabularies(t('weibo'));
			$vid ='';
			foreach($vocabularies as $key=>$vocabulary){
				if($vocabulary->name == t('微博频道')) {
					$vid = $key;
				}
			}
			$Buyer_tid = taxonomy_get_term_by_name(t('Buyer'));
			$parent = $Buyer_tid['0']->tid; //23
			$Buyer_taxonomy_tree=taxonomy_get_tree($vid, $parent, $depth = -1, $max_depth = NULL);	
	
		if(user_access('add new Buyer info') && $donext){//&& $sina_vp_type!='Show' && $sina_vp_type!='Transfer'
				// 转让和分享不能再秀了！～
			foreach($Buyer_taxonomy_tree as $term){
				$links['link_'.$term->name] = array(
			    'title' => t($term->name), 
			    'href' => "new/$term->tid/$node->nid", 
			    //'query' => 'redirect=node', 
			    //'fragment' => 'anchorname', 
			    'attributes' => array('title' => t('发布'.$term->name)),
	  		);
			}
			$links['link_真人秀']['title'] = '秀一下';
			if($links['comment_add']){$links['comment_add']['title'] = '评论';}			 
		}
	}//
	return $links;
}
/**
 * 验证》140字  noyong
 * */
function sina_vp_weibo_length_validate($element, &$form_state) {
  if (isset($element['#value']['title'])) {    
      form_error($element['title'], t('The area code is invalid.'));
  }
  return $element;
}
/**
 * 发带图片的微博   节点 
 * @param (string) $text
 *  文字内容
 * @param (string) $url
 *  访问地址
 * @param (mixd) $node 
 *  节点
 */
function sina_open_t_set_tweet2($text, $url = NULL,$node=NUll) { //dale $node=NUll
  $tid = arg(1);
	$nid = arg(2); //new/$term_id/$nid
  if (isset($url)) {
    $len = drupal_strlen($url);
  } else {
    $len = 0;
  }
  $len = 140 - drupal_strlen($text) - $len;//+ ? - 
  
  if ($len < 0) {
    $text = drupal_substr($text, 0, $len);
  }
  //对评论或发布判断。
  $donext=false;
	if(isset($node->type)){//if is $node 拥有type属性
		$donext=true;
	}elseif(isset($node[cid])){//if is $comment is_array &&cid属性
		$request_url='http://api.t.sina.com.cn/statuses/comment.json'; 
		$wid= sina_vp_get_wid($node[nid]);
		//watchdog('$params22','<pre>'.print_r($result,true));
		$params['id'] = $wid;
		$params['comment'] = urlencode($text. $url);
		$params['without_mention'] = 0;
		$params['comment_ori'] = 1;
		/* some API
			id 	true 	int64 	要评论的微博消息ID
			comment 	true 	string 	评论内容。必须做URLEncode,信息内容不超过140个汉字。
			cid 	false 	int64 	要回复的评论ID。
			without_mention 	false 	int 	1：回复中不自动加入“回复@用户名”，0：回复中自动加入“回复@用户名”.默认为0.
			comment_ori 	false 	int 	当评论一条转发微博时，是否评论给原微博。0:不评论给原微博。1：评论给原微博。默认0. 
		*/
		$result = sina_open_t_set_request($request_url,$params);
		
		$node_root = node_load($node[nid]);//$node[nid]=$comment[nid]  
		foreach($node_root->taxonomy as $key=>$value){
			$tid = $key;
		};
		_sina_vp_db_write($result->data,$node,$tid,$node[nid]);
		if ($result->code == 200) {
			//watchdog('success','已成功发送到新浪微博2026'); 			
			if(function_exists(dpm)) dpm(json_decode($result->data));//没效果，注销了 
			drupal_set_message('评论已成功发送到新浪微博');	//没效果，注销了	
		} else {
			drupal_set_message('评论转发失败 code:201109262026');
			watchdog('warning','评论转发失败 code:201109262026');
		}	
	}
	if($donext){//发布节点，同步新浪微博	new/$tid  new/$tid/$nid
	  if(arg(0)=='forward'){
	  	//分享 转发api forward/$tid/$nid
			$params['id'] = sina_vp_get_wid($nid);
			$params['status'] = urlencode($text. $url);
			//是否在转发的同时发表评论。0表示不发表评论，1表示发表评论给当前微博，2表示发表评论给原微博，3是1、2都发表。默认为0。 
			$params['is_comment'] = 0;
			$request_url = 'http://api.t.sina.com.cn/statuses/repost.json';
			$result = sina_open_t_set_request($request_url,$params);
		  _sina_vp_db_write($result->data,$node,$tid,$nid);
		  if(function_exists(dpm)) dpm(json_decode($result->data),'微博返回信息');		
		  if ($result->code == 200) {	    					  			
				drupal_set_message('已成功发送到新浪微博');
		  }else{
		    drupal_set_message('发送到新浪微博失败，错误代码：2011100701，请联系管理员xiangkeguo@gmail.com。', 'warning');
		  }
			return;
		}
	  if(is_null($node->field_weibo_image[0])){//new/$tid
	  	$result = sina_open_t_set_request(
		    'http://api.t.sina.com.cn/statuses/update.json',
		    array('status' => urlencode($text. $url))
		  );
		  _sina_vp_db_write($result->data,$node,$tid,$nid);
		  if(function_exists(dpm)) dpm(json_decode($result->data),'微博返回信息');		
		  if ($result->code == 200) {	    					  			
				drupal_set_message('已成功发送到新浪微博');
		  }else{
		    drupal_set_message('发送到新浪微博失败，错误代码：2011100701，请联系管理员xiangkeguo@gmail.com。', 'warning');
		  }
			return;
	  }else{//发 布图片微薄
	  	$status =	urlencode($text. $url);
	  	$pic_path = $node->field_weibo_image[0][filepath];
		  global $user;
			module_load_include('php', 'sina', 'api/weibooauth');
			module_load_include('php', 'sina', 'api/config'); //WB_AKEY , WB_SKEY	
			$token = sina_open_get_access_token($user->uid);
			if(empty($token)){
				module_load_include('inc', 'sina_open', 'sina_open.pages');
				return sina_open_page_config(user_load($user->uid));
			}
			$last_key[oauth_token]=$token->key;
			$last_key[oauth_token_secret]=$token->secret;
			$_SESSION['last_key'] = $last_key;
		
			$c = new WeiboClient( WB_AKEY , WB_SKEY ,$token->key ,$token->secret );
			$result = $c->upload($status , $pic_path);
			if(function_exists(dpm)) dpm($result,'图片微博返回数据');
			//$result['id']=$result['mid'];
			$result['id']=number_format($result['id'], 0, '', '');
			_sina_vp_db_write(json_encode($result),$node,$tid,$nid);
			if (is_array($result)) {
				drupal_set_message('已成功发送到新浪微博ok with pic');
				//if(function_exists(dpm)) dpm(json_decode($result->data));				
			} else {
			  drupal_set_message('同步失败，请检查您的网络！', 'error');
			  //return false;
			}
		return;
	  }
  }
}
/**
 * time format function.
 */
function sina_vp_time_format($created_at){
	//$created_at= Thu Sep 22 14:34:21 +0800 2011
	$created_at=strtotime($created_at);
	$minutes=ceil((time()-$created_at)/60)+2;
	if($minutes<60){
		return $minutes.'分钟前';
	}elseif($show_hours=ceil($minutes/60)<12){
		return $show_hours.'小时前';
	}elseif(ceil($minutes/60)<24 && date("d",time())==date("d",$created_at)){
		return '今天 '.date("H:i",$created_at);
	}else{
		return date("m月d日 H:i",$created_at);
	}
}
/**
 *  replace a url text to <a>link</a> not use l()
 *  天空蔚蓝，天空依然蔚蓝。http://t.cn/adPO8F
 *  ==>天空蔚蓝，天空依然蔚蓝。<a href="http://t.cn/adPO8F">http://t.cn/adPO8F</a>
 * */
function sina_vp_url_format($string){
	$reg='/http:\/\/([\w.]+\/?)\S*/';
	$total_length=strlen($string);

	//删除最后一个出现的url
	for($i=4;$i<$total_length;$i++)
	{
		$temp=substr($string,-1*$i,$i);
		if(preg_match($reg,$temp)>0)
		{
			$string=substr($string,0,$total_length-$i);
			$i=$total_length+100;
		}
	}
	
	$result=preg_replace_callback($reg,"sina_vp_url_replace",$string);//此处调用下面的函数
	return $result;
}
function sina_vp_url_replace($string){
	$new_url='<a href="'.$string[0].'">'.$string[0].'</a>';
	return $new_url;
}
/**
 *  weibo_id
 * */
function get_nid_by_wid($wid){
  $sql="SELECT nid
          FROM {sina_vp_weibo2node}
          WHERE wid ='".$wid."'";
  $result =db_query($sql);
  if($row= db_fetch_array($result)){
     return $row['nid'];
  }
	drupal_set_message('error! when get nid by wid.'.__FILE__.__LINE__);
	return 0;
}

/**
 * get wid by nid
 */
function sina_vp_get_wid($nid){
	$result=db_query("SELECT `wid` wid FROM {sina_vp_weibo2node} WHERE `nid`=%d and `cid`=0",$nid);
	return db_result($result);
}
/**
 *  node_link_alter
 * */
function node_link_alter($type, $node = NULL, $teaser = FALSE) {
  $links = array();
  if ($type == 'weibo') {
    if ($teaser == 1 && $node->teaser && !empty($node->readmore)) {
      $links['node_read_more'] = array(
        'title' => t('Read more'), 
        'href' => "node/$node->nid",
        'attributes' => array('title' => t('Read the rest of !title.', array('!title' => $node->title))),
      );
    }
  }
  return $links;
}
/**
 * Implementation of hook_theme()
 */
function sina_vp_theme() {
  return array(
  	'weibo_page_default' => array(
    	'arguments' => array('form' => NULL)
    ),
  );
}
/**
 * 节点输出对title或body的微博分类输出
 * [卖家/买家]发布了[新品/爆款](XXXX)
 */
function sina_vp_context_preprocess(&$node){
	$sina_vp_type = sina_vp_get_type_by_node($node->nid);
	global $user;
	$output ='';
	//转发了 发布了 分享了 秀了 转让了	
	/*if((is_null(arg(1)) && (arg(0)=='VpCenter' || arg(0)=='UCenter'))){
		$output .= '【'.t($sina_vp_type).'】';
		if($node->uid==0 || $node->uid==$user->uid){//我发布的内容不添加标签，但是在大厅里要添加，频道里不添加							
		}else{			
			$output .= t('<a href="@user">@'.user_load($node->uid)->name.' </a>',array('@user' => url('user/').$node->uid));
		}
	}elseif(is_null(arg(1)) && (arg(0)=='Show' || arg(0)=='Transfer')){
		if($node->uid==0 || $node->uid==$user->uid){//我发布的内容不添加标签，但是在大厅里要添加，频道里不添加							
		}else{			
			$output .= t('<a href="@user">@'.user_load($node->uid)->name.' </a>',array('@user' => url('user/').$node->uid));
		}
	}else{
		if($node->uid==0 || $node->uid==$user->uid){//我发布的内容不添加标签，但是在大厅里要添加，频道里不添加							
		}else{			
			$output .= t('<a href="@user">@'.user_load($node->uid)->name.' </a>',array('@user' => url('user/').$node->uid));
		}	
	}*/
	$output .= '【'.t($sina_vp_type).'】';
	$output .= t('<a href="@user">@'.user_load($node->uid)->name.' </a>',array('@user' => url('user/').$node->uid));
	return $output;
} 
/**
 * 默认获取当前用户的粉丝uid数组.
 * @param $uid=null 
 * @return array() $follows_uid[]
 */
function get_follows($uid=NULL)
{
	if(is_null($uid)){
		global $user;
		$uid = $user->uid;
	}	
	$array=user_relationships_load(array("requestee_id" => $uid),array("sort" => 'requester_id'));
	foreach($array as $key=>$value){
		$follows_uid[] =$key; //取得粉丝用户uid
	}
	return $follows_uid;
}
/**
 * 通过节点/评论/uid/微博昵称 获取用户微博uid
 */
function sina_vp_get_sina_uid($params){ //暂时实现 节点/评论/uid/
	$uid = is_object($params)?$params->uid:$params;
	$data = db_fetch_object(db_query('SELECT sina_uid FROM {sina_open_user} WHERE uid = %d', $uid));
  
  if (isset($data->sina_uid)) { 
    return $data->sina_uid;
  } else {
    drupal_set_message('获取用户sina_uid失败！', 'error');
  }
} 
/**
 * @Implement of hook_user()
 */
function sina_vp_user($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'load':
					
			break;
		case 'login': //第一次登陆会比较慢～！抓取头像上传本站。load？			
			global $user;//like $user->picture=='http://tp2.sinaimg.cn/1801497981/50/1297470438/1'
			$pattern = "/^http\:\/\//";
			$subject = $user->picture;
			if(preg_match($pattern, $subject)){
				$pattern="/\/50\//";
				$user->picture = preg_replace($pattern, "/180/", $user->picture);	
				$string = file_get_contents($user->picture);
				$user_picture_path = variable_get('user_picture_path', '');
				$user->picture = "sites/default/files/$user_picture_path/picture-$user->uid.jpg";
				$handle = fopen($user->picture, "w+");
				fwrite ( $handle , $string );
			}
			if(!$user->signature){
				$params['user_id'] = sina_vp_get_sina_uid($account->uid);
				//按用户ID或昵称返回用户资料以及用户的最新发布的一条微博消息。
				$request_url = 'http://api.t.sina.com.cn/users/show.json';
				$result = sina_open_t_set_request($request_url,$params);
				
				if ($result->code == 200) {					        
	        $user->signature = json_decode($result->data)->description;
	      } else {
	        drupal_set_message('个性签名获取失败', 'error');
	      }
			}
			drupal_write_record('users', $user, 'uid');
			
			$category = 'Personal information';
			$params['user_id'] = sina_vp_get_sina_uid($account->uid);
			profile_load_profile(&$user);
			if(!$user->profile_sex)$donext=TRUE;
			//按用户ID或昵称返回用户资料以及用户的最新发布的一条微博消息。
			$request_url = 'http://api.t.sina.com.cn/users/show.json';
			$result = sina_open_t_set_request($request_url,$params);				
			if($donext && $result->code == 200) {
				if(!$user->profile_sex){
					switch (json_decode($result->data)->gender) {
						case 'm':
							$edit['profile_sex'] = t('男');
							break;
						case 'f':
							$edit['profile_sex'] = t('女');
							break;
						default:
							$edit['profile_sex'] = t('保密');
							break;
					}
				}
				if(!$user->profile_url){$edit['profile_url'] = json_decode($result->data)->url;}
				if(!$user->profile_location){$edit['profile_location'] = json_decode($result->data)->location;}
				if(!$user->profile_province){$edit['profile_province'] = json_decode($result->data)->province;}
				if(!$user->profile_city){$edit['profile_city'] = json_decode($result->data)->city;}
				if($edit['profile_province'] && $edit['profile_city']){//is_numeric($edit['profile_province']) || is_numeric($edit['profile_city'])
					$request_url = 'http://api.t.sina.com.cn/provinces.json';
					$result = sina_open_t_set_request($request_url);
					$data = json_decode($result->data)->provinces;
					dpm($data,'$data');
					foreach($data as $key=>$value){
						if($value->id==$edit['profile_province']){$province_name=$value->name;$city_array=$value->citys;}
					}					
					foreach($city_array as $key=>$value){
						foreach($value as $key2=>$city){						
							if($key2==$edit['profile_city']){$city_name=$city;}
						}
					}
					$edit['profile_province'] = $province_name;
					$edit['profile_city'] = $city_name;
				}
				profile_save_profile(&$edit, &$user, $category, $register = FALSE);
      }
    break;
 		case 'delete':
		break;
			// User is registering.
		case 'register':
		// Add a fieldset containing radio buttons to the
		// user registration form.
			$fields['legal_agreement'] = array(
			'#type' => 'fieldset',
			'#title' => t('注册条款')//Legal Agreement
			);
			$fields['legal_agreement']['decision'] = array(
			'#type' => 'radios',
			'#description' => t('By registering at %site-name, you agree that
				at any time, we (or our surly, brutish henchmen) may enter your place of
				residence and smash your belongings with a ball-peen hammer.',
				array('%site-name' => variable_get('site_name', 'drupal'))),
				'#default_value' => 0,
				'#options' => array('不同意','同意')//t('I disagree'), t('I agree')
			);
			return $fields;
		 
		// Field values for registration are being checked.
		// (Also called when user edits his/her 'my account' page, but
		// $edit['decision'] is not set in that case.)
		case 'validate':
		// Make sure the user selected radio button 1 ('I agree').
		// the validate op is reused when a user updates information on
		// The 'my account' page, so we use isset() to test whether we are
		// on the registration page where the decision field is present.
			if (isset($edit['decision']) && $edit['decision'] != '1') {
				form_set_error('decision', t('You must agree to the Legal Agreement before registration can be completed.'));
			}
			return;
		 
		// New user has just been inserted into the database.
		case 'insert':
		// Record information for future lawsuit.
			watchdog('user', t('User %user agreed to legal terms', array('%user' => $user->name)));
			return;					
  }
}

/**
 * 添加一个imageCache 微博头像 50X 150X 180X
 * HOOK_imagecache_default_presets()
 */
function sina_vp_imagecache_default_presets() {
  $presets = array();
  $presets['photo_50'] = array (
    'presetname' => 'photo_50',
    'actions' => array (
      0 => array (
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale_and_crop',
        'data' => array (
          'width' => '50',
          'height' => '50',
        ),
      ), 
      1 => array (//radius: 0.5, sigma: 0.5, amount: 100, threshold: 0.05
        'weight' => '1',
        'module' => 'imagecache',
        'action' => 'imagecache_sharpen',
        'data' => array (
          'radius' => '0.5',
          'sigma' => '0.5',
          'amount' => '100',
          'threshold' => '00.5',
        ),
      ),
    ),
  );
	$presets['photo_150'] = array (
    'presetname' => 'photo_150',
    'actions' => array (
      0 => array (
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale_and_crop',
        'data' => array (
          'width' => '150',
          'height' => '150',
        ),
      ), 
      1 => array (//radius: 0.5, sigma: 0.5, amount: 100, threshold: 0.05
        'weight' => '1',
        'module' => 'imagecache',
        'action' => 'imagecache_sharpen',
        'data' => array (
          'radius' => '0.5',
          'sigma' => '0.5',
          'amount' => '100',
          'threshold' => '00.5',
        ),
      ),
    ),
  );
	$presets['vp'] = array ( //微博图片
    'presetname' => 'vp',
    'actions' => array (
      0 => array (
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale',
        'data' => array (
          'width' => '120',
          'height' => '100%',
        ),
      ), 
      1 => array (//radius: 0.5, sigma: 0.5, amount: 100, threshold: 0.05
        'weight' => '1',
        'module' => 'imagecache',
        'action' => 'imagecache_sharpen',
        'data' => array (
          'radius' => '0.5',
          'sigma' => '0.5',
          'amount' => '100',
          'threshold' => '00.5',
        ),
      ),
    ),
  );
  return $presets;
}
/*
 * - MODULE_preprocess_HOOK(&$variables)
 *   This is for modules that want to alter or provide extra variables for
 *   theming hooks not registered to itself. For example, if a module named
 *   "foo" wanted to alter the $submitted variable for the hook "node" a
 *   preprocess function of foo_preprocess_node() can be created to intercept
 *   and alter the variable.
 *
 */
function sina_vp_preprocess_user_picture(&$variables) {
	if(arg(0)=='user'){return $variables;}//个人中心显示大图，其他则处理
  $variables['picture'] = '';
  if (variable_get('user_pictures', 0)) {
    $account = $variables['account'];
    /*if (!empty($account->picture) && file_exists($account->picture)) { //把180大图片缓存50小头像
    	$user_picture_path = variable_get('user_picture_path', '');
			$filepath="sites/default/files/imagecache/photo_50/$user_picture_path/picture-$account->uid.jpg";
      //file_get_contents($filepath);//访问imagecache路径生成小图片
      if(!(file_exists($filepath))){
					// create a new cURL resource
				$ch = curl_init();				
				// set URL and other appropriate options
				curl_setopt($ch, CURLOPT_URL, "http://dev.weipujie.com/?q=zh-hans/$filepath");
				curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
				// grab URL and pass it to the browser
				curl_exec($ch);				
				// close cURL resource, and free up system resources
				curl_close($ch);	
			}
      $picture = file_create_url($filepath);			
    }elseif (variable_get('user_picture_default', '')) {
      $picture = variable_get('user_picture_default', '');
    }*/
    if (!empty($account->picture) && file_exists($account->picture)) {
      $picture = file_create_url($account->picture);
    }
    else if (variable_get('user_picture_default', '')) {
      $picture = variable_get('user_picture_default', '');
    }
    if (isset($picture)) {
      $alt = t("@user's picture", array('@user' => $account->name ? $account->name : variable_get('anonymous', t('Anonymous'))));
      $attributes = array('width' => '80px','height' => '80px');
      $variables['picture'] = theme('image', $picture, $alt, $alt, $attributes, FALSE);
      if (!empty($account->uid) && user_access('access user profiles')) {
        $attributes = array('attributes' => array('title' => t('View user profile.')), 'html' => TRUE);
        $variables['picture'] = l($variables['picture'], "user/$account->uid", $attributes);
      }
    }
  }
}
/**
 * @} End of "sina.module".
 */
