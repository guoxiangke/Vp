<?php
/**
 * @author dale
 * @version $Id$
 * @copyright dale
 * @package sina
 */

/**
 * @file
 * This is an sina_open module extended.
 */
module_load_include('inc', 'node', 'node.pages');//调用节点发布相关

/**
 * Implementation of hook_node_info().
 * Define module-provided node types.
 */
function sina_vp_node_info() {
  $items = array(
    'weibo' => array(
      'name' => t('weibo'),
      'module' => 'sina',
      'description' => 'weibo note type',
      'has_title' => '1',
      'title_label' => t('Title'),
      'has_body' => '1',
      'body_label' => 'Body',
      'help' => 'sina_vp_node_info help',
      'node_options' => array (
        'status' => true,
        'promote' => false,
        'sticky' => false,
        'revision' => false,
      ),
      'comment' => '1',
    ),
  );
  return $items;
}
//If you implement this hook you MUST also implement a hook_form() 
//if you want that node type to appear in the content type list.
/*
 * Implementation of hook_form().
 * Display a node editing form. 
 */
function sina_vp_form(&$node, &$param) 
{
  $node_form = node_content_form($node, $form_state);
  return $node_form;
}

/*
 * Implementation of hook_nodeapi().
 * Act on nodes defined by other modules.
 */
function sina_vp_nodeapi(&$node, $op){
	 global $user;
	//copy form sina_open_nodeapi
	if ($op == 'insert' && variable_get('sina_open_node_'.$node->type, 1)) {// && $node->sina_vp_open 1. 无绑定，不同步，2.绑定取消管勾
		//所有发布的都走这一步 写入表『sina_vp_weibo2node』
    if (1||db_result(db_query('SELECT uid FROM {sina_open_user} WHERE uid = %d', $user->uid))) {
    //在sina_open_t_set_tweet2 里做判断，如果没绑定，不请求request_url了。    
      $url = url('node/'.$node->nid, array('absolute' => true));
      
      sina_open_t_set_tweet2(//dale ,发布图片 add pram @$node->nid callback function sina.module
        $node->sina_vp_open['title'] ? $node->sina_vp_open['title'] : $node->title,
        url('sina_vp_front_page&destination=node/'.$node->nid, array('absolute' => true))
	  		,$node //传递节点 dale
      );
			//发布节点后不跳转node页 与简洁链接。dale
			// 需完善 参 http://www.ludou.org/get_current_page_url.html
			//$uri=preg_replace($patterns2, $replacements, $string);
			//str_replace('q=','',$_SERVER['QUERY_STRING']);
			//drupal_goto('vp/user_timeline');
    } else {
      //drupal_set_message('您需要先绑定新浪微博帐号，才能够推送信息。', 'warning');
    }
  }
  switch( $node->type )
  {
    case 'weibo':
      switch ($op) {
        case 'insert':
			  	$node->body=$node->title;
		      drupal_write_record('node_revisions', $node, 'vid');
					
          break;
        case 'update':
          $node->body=$node->title;	
	     		drupal_write_record('node_revisions', $node, 'vid');
          break;
        case 'delete':    
					$wid= sina_vp_get_mid($node->nid);//刚开始使用wid好使，现在得用mid了，晕死了
					if($wid){
						$request_url="http://api.t.sina.com.cn/statuses/destroy/$wid.json"; 
						$result = sina_open_t_set_request($request_url);
						if ($result->code == 200) {
							drupal_set_message($message = '同步删除成功！', $type = 'status', $repeat = TRUE);
							//if(function_exists(dpm)) dpm();				$data=json_decode($result->data);.$data->error
						} else {					
							drupal_set_message('同步删除失败！', $type = 'warning', $repeat = TRUE);
							return false;
						}	      
					}
					db_query("DELETE FROM {sina_vp_weibo2node} WHERE nid = %d", $node->nid); 						 
          break;
        case 'prepare':
          //
          break;
        case 'load':
          break;
        case 'view':
          break;
				case 'alter':
					//sina_vp_context_preprocess(&$node);
          break;
      }
      break;
	//发布任务跳转列表页
	case 'story':
		 switch ($op) {
	        case 'insert':
		      	drupal_goto('tasklist');	
	          break;
	        case 'update':
	          drupal_goto('tasklist');
	          break;
			 }
	break;
	case 'profile':
		 switch ($op) {		 	
	        case 'insert':
	        break;
	        case 'update':	          
		      	if($user->uid == $node->uid && $password = $node->field_profile_password['0']['value']){
		      		$update_sql = "UPDATE  {users} SET  `pass` = '$password' WHERE  `uid` =$node->uid";
							db_query($update_sql);
							//watchdog($type='updage profile', $message=$user->name.'更新了的资料');//'.user_load($node->uid)->name.'
		      	}
	        break;
					case 'view':
	          if($user->uid <> $node->uid&&$user->uid<>1){        	
	          	drupal_set_message($message = '刚才的页面,<您>无权查看！', $type = 'warning', $repeat = TRUE);
	          	drupal_goto('node');
	          }
	        break;
			 }
	break;
  }
}
/**
 * @Implement of hook_comment()
 * copy form sina_open_comment()
 */
function sina_vp_comment(&$comment, $op) {
  if ($op == 'insert'&& variable_get('sina_open_comment', 1)) {// && isset($comment['sina_vp_open']) 
    if(1||$comment['sina_vp_open']) { 
      sina_open_t_set_tweet2(
        $comment['subject'],
        url('sina_vp_front_page&destination=node/'.$comment['nid'], array('absolute' => true, 'fragment' => 'comment-'. $comment['cid']))
				,$comment //dale 新添comment
      );
    }
    //分享评论时 隐藏了comment，结果评论无内容 
   	if(empty($comment['comment'])){
   		$comment['comment']=$comment['subject'];
   	}
		drupal_write_record('comments', $comment, 'cid');	
  }
	if ($op == 'delete'){//同步到新浪评论删除。
		$result=db_query("SELECT `wid` wid FROM {sina_vp_weibo2node} WHERE `nid`=%d and `cid`=%d",$comment->nid,$comment->cid);
		$cid_w = db_result($result);
		$request_url = 'http://api.t.sina.com.cn/statuses/comment_destroy/'.$cid_w;
		$result = sina_open_t_set_request($request_url);
		if($cid_w){
			db_query("DELETE FROM {sina_vp_weibo2node} WHERE `wid`='%d'",$cid_w);
		}else{
			db_query("DELETE FROM {sina_vp_weibo2node} WHERE `nid`='%d' AND `cid`='%d'",$comment->nid,$comment->cid);
		}
	}
}
/**
 * Implementation of hook_perm().
 */
function sina_vp_perm(){
  return array(
		'add new product',//新产品
		'add new activity',//活动
		'add new special',//爆款
		'add new sale',
		'add new transfer',//发布转让信息
		'add new show',//真人秀
		'add new forward',//转发权
		'view my follows', //查看粉丝		
		'add new Seller info',//卖家权限
		'add new Buyer info',//买家权限
	);
}

/**
 * Implementation of hook_access().
 * del=true

function sina_vp_access($op, $node, $account) {
  switch ($op) {
    case 'create':
      // Anonymous users cannot post even if they have the permission. 
      return user_access('create weibo entries', $account) && $account->uid ? TRUE : NULL;
    case 'update':
      return user_access('edit any weibo entry', $account) || (user_access('edit own weibo entries', $account) && ($node->uid == $account->uid)) ? TRUE : NULL;
    case 'delete':
      return user_access('delete any weibo entry', $account) || (user_access('delete own weibo entries', $account) && ($node->uid == $account->uid)) ? TRUE : NULL;
  }
} */
function sina_vp_init(){
	// popups_add_popups(array('#mylink2=>array('reloadWhenDone'=>TRUE))));
	// popups_add_popups(); 
	 //popups_add_popups(array('.login_link'=>array('updateMethod'=>'reload')));
	// popups_add_popups(array('#login_link_8' => array('reloadWhenDone' => TRUE),'updateMethod'=>'reload','updateSource'=>'final')); 
  //drupal_add_css(drupal_get_path('module', 'sina_vp') .'/css/sina.user.page.css');
	
	//drupal_add_css(drupal_get_path('module', 'sina_vp') .'/css/highslide.css');
	//drupal_add_js(drupal_get_path('module', 'sina_vp') .'/js/highslide.js');
	//drupal_add_js(drupal_get_path('module', 'sina_vp') .'/js/highslide-extra.js');
	$timezone = "Asia/Chongqing";
	if(function_exists('date_default_timezone_set')){ 
			date_default_timezone_set($timezone);
		}

	//twitter 样式表
	//drupal_add_css(drupal_get_path('module', 'sina_vp') .'/css/bootstrap.min.css');
	
	

}
/**
 * Implementation of hook_menu().
 */
function sina_vp_menu() {
	global $user;
	$items['vp'] = array(
		'title' => t('Vp'),//'menu_name' => 'primary-links',
		'page callback' => 'sina_vp_public_timeline',
		'access callback' => TRUE,
		'file' => 'sina_vp.pages.inc',
		'weight' => -20,
  );
 // Front Page
  $items['sina_vp_front_page'] = array(
      'title' => '微铺街',
      'page callback' => 'sina_vp_front_page',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
      'file' => 'page.front.inc',
  );
	$items['vp/public_timeline'] = array(
    'title' => t('public_timeline'),//'menu_name' => 'Secondary_links',
    'page callback' => 'sina_vp_public_timeline',
    'access callback' => TRUE,
    //'access callback' => 'create weibo entries',
    //'access arguments'=>  array('create weibo entries'),
    'description' => t('public_timeline'),
    'file' => 'sina_vp.pages.inc',
    'weight' => -20,
		'type' => MENU_LOCAL_TASK,		
		//'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['vp/weibo_page_default/comment_ahah_callback/%'] = array(//评论
    'page callback' => 'weibo_page_default_callback',
    'page arguments' => array(3),
    'access callback' => TRUE,
    'file' => 'sina_comment_ahah.inc',
    'type' => MENU_CALLBACK,
  );
  $items['vp/comment_ajax/%node'] = array(//评论
    'page callback' => comment_render_4vp,
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
	//根据term 动态生成不同的频道。
	//获取$vocabulary = 微博频道  下 $parent = Seller|Buyer 的所有term
	$vocabularies = taxonomy_get_vocabularies(t('weibo'));
	$vid ='';
	foreach($vocabularies as $key=>$vocabulary){
		if($vocabulary->name == t('微博频道')) {
			$vid = $key;
		}
	}
	$Seller_tid = taxonomy_get_term_by_name('Seller');
	$parent = $Seller_tid['0']->tid; //22
	$Seller_taxonomy_tree=taxonomy_get_tree($vid, $parent, $depth = -1, $max_depth = NULL);
	foreach($Seller_taxonomy_tree as $term){
		$items["new/$term->tid"] = array(//卖家发布信息
    'title' => $term->name,
    'page callback' => 'sina_vp_new',
    'page arguments' => array(1),
    'access callback' => 'user_access',
    'access arguments' => array('add new Seller info'),
    'file' => 'sina_vp.pages.inc',
		'type' => MENU_CALLBACK,
 	 );	
	}
	$Buyer_tid = taxonomy_get_term_by_name('Buyer');
	$parent = $Buyer_tid['0']->tid; //23
	$Buyer_taxonomy_tree=taxonomy_get_tree($vid=2, $parent, $depth = -1, $max_depth = NULL);
	foreach($Buyer_taxonomy_tree as $term){
		$items["new/$term->tid/%"] = array(//new/5|6/% 买家发布信息
    'title' => $term->name,
    'page callback' => 'sina_vp_new',
    'page arguments' => array(1,2),
    'access callback' => TRUE,
    //'access callback' => 'user_access',
    //'access arguments' => array('add new Buyer info'),
    'file' => 'sina_vp.pages.inc',
		'type' => MENU_NORMAL_ITEM,
 	 );	
	}
	//新品，活动，爆款，特卖，转让，真人秀
  $items['forward/%/%'] = array(//转发 tid/nid
    'title' => t('分享'),
    'page callback' => 'sina_vp_new_forward',
    'page arguments' => array(1,2),
    'access callback' => 'user_access',
    'access arguments' => array('add new forward'),
    'description' => '转发分享',
    'file' => 'sina_vp.pages.inc',
    'weight' => -15,
		'type' => MENU_CALLBACK,
  );
  $items['forward/%/%/ajax'] = array(//转发 tid/nid
    'title' => t('分享'),
    'page callback' => 'sina_vp_new_forward_ajax',
    'page arguments' => array(1,2),
    'access callback' => 'user_access',
    'access arguments' => array('add new forward'),
    'description' => '转发分享',
    'file' => 'sina_vp.pages.inc',
    'weight' => -15,
		'type' => MENU_CALLBACK,
  );
	/////买家或卖家中心，根据角色而定
	$items['UCenter'] = array(
    'title' => t('我的微铺街'),
    'page callback' => 'sina_UCenter_page',
    'file' => 'sina_vp.pages.inc',
    'access callback' => TRUE,
    'description' => '我的微铺街',
    'weight' => -15,
		'type' => MENU_NORMAL_ITEM,
  );
	$items['UCenter/All'] = array(
    'title' => t('我的微铺街'),
    'access callback' => TRUE,
		'type' => MENU_DEFAULT_LOCAL_TASK,
  );
	foreach($Seller_taxonomy_tree as $term){
		$items["UCenter/$term->tid"] = array(
    'title' => $term->name,
    'page callback' => 'sina_UCenter_page',
    'file' => 'sina_vp.pages.inc',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'weight' => $term->weight,
    'description' => '我关注的'.$term->name,
		'type' => MENU_NORMAL_ITEM|MENU_LOCAL_TASK,
 	 );	
	 $items["UCenter/$term->tid/%"] = array(
    'title' =>  $term->name,
    'page callback' => 'sina_UCenter_page',
    'file' => 'sina_vp.pages.inc',
    'page arguments' => array(1,2),   
    'access callback' => TRUE,
    'weight' => $term->weight,
    'description' => '我关注的'.$term->name,
		'type' => MENU_LOCAL_TASK,
 	 );	
	}
	$items['UCenter/All/%'] = array(
    'title' => t('微铺街'),
    'access callback' => TRUE,
    'page callback' => 'sina_UCenter_page',
    'file' => 'sina_vp.pages.inc',
    'page arguments' => array(1,2), 
		'type' => MENU_LOCAL_TASK,
  );
	foreach($Buyer_taxonomy_tree as $term){
		$items["UCenter/$term->tid"] = array(//my转让潮 my真人秀
    'title' => 'my'.$term->name,
    'page callback' => 'sina_UCenter_page',
    'file' => 'sina_vp.pages.inc',
    'page arguments' => array(1),    
    //'access arguments' => array('add new Buyer info'),
    'access callback' => TRUE,
    'weight' => $term->weight+20,
		'description' => '我关注的'.$term->name,
		'type' => MENU_NORMAL_ITEM|MENU_LOCAL_TASK,
		'hidden' => 1,
 	 );	
	}
	///
	$items['VpCenter0'] = array(
    'title' => t('微铺街'),
    'page callback' => 'sina_VpCenter_page',
    'access callback' => TRUE,
    'description' => '微铺街',
    'file' => 'sina_vp.pages.inc',
    'weight' => -15,
		'type' => MENU_NORMAL_ITEM,
		//'menu_name' => 'primary-links',
  );
	$items['VpCenter/All'] = array(
    'title' => t('微铺大厅'),
    'description' => '微铺大厅',
    'weight' => -15,
		'type' => MENU_DEFAULT_LOCAL_TASK,
  );
	foreach($Seller_taxonomy_tree as $term){
		$items["VpCenter/$term->tid"] = array(
    'title' => $term->name,
    'page callback' => 'sina_VpCenter_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'sina_vp.pages.inc',
    'weight' => $term->weight,
		'type' => MENU_NORMAL_ITEM|MENU_LOCAL_TASK,
 	 );	
	}
	
	$items['Transfer0'] = array(
    'title' => t('转让潮'),
    'page callback' => 'sina_vp_BuyCenter',
    'page arguments' => array('5'),
    'access callback' => TRUE,
    'description' => '转让潮',
    'file' => 'sina_vp.pages.inc',
    'weight' => -15,
    //'menu_name' => 'primary-links',
  );
	$items['Show0'] = array(
    'title' => t('真人秀'),
    'page callback' => 'sina_vp_BuyCenter',
    'page arguments' => array('6'),
    'access callback' => TRUE,
    'description' => '真人秀',
    'file' => 'sina_vp.pages.inc',
    'weight' => -15,
    //'menu_name' => 'primary-links',
  );
		
	$items['ahah_callback/collapse_node_view'] = array(//隐藏节点显示
    'page callback' => 'collapse_node_view',
    'access callback' => TRUE,
    'file' => 'sina_vp.pages.inc',
    'type' => MENU_CALLBACK,
  );
		
	$items['ahah_callback/show_more'] = array(//隐藏节点显示
    'page callback' => 'show_more_node_view',
    'access callback' => TRUE,
    'file' => 'sina_vp.pages.inc',
    'type' => MENU_CALLBACK,
  );
	$items['VpCenter/1/show_more'] = array(//隐藏节点显示
    'page callback' => 'sina_VpCenter_page_json',
    'access callback' => TRUE,
    'file' => 'sina_vp.pages.inc',
    'type' => MENU_CALLBACK,
  );
	$items['VShop/%'] = array(//隐藏节点显示
		'page callback' => 'show_buyer_page',
		'page arguments' => array(1), 
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
	$items['recommend'] = array(
		'title' => t('一键关注'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('sina_vp_recommend'), 
		'file' => 'sina_vp.pages.inc',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

//主导航链接
	$items['VCenter'] = array(
    'title' => t('微铺街'),
    'page callback' => 'sina_VCenter_page',
    'access callback' => TRUE,
    'description' => '店铺列表',
    'file' => 'sina_vp.pages.inc',
    'weight' => -10,
		'type' => MENU_NORMAL_ITEM,
		'menu_name' => 'primary-links',
  );
	$items['VCenter/Sub_most'] = array(//Subscribe to a maximum of 订阅最多
    'title' => t('微铺街'),
    'page callback' => 'sina_VCenter_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'description' => '店铺列表',
    'file' => 'sina_vp.pages.inc',
    'weight' => -10,
		'type' => MENU_CALLBACK,		
  );
	$items['VCenter/New'] = array(//最新加入
    'title' => t('微铺街'),
    'page callback' => 'sina_VCenter_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'description' => '店铺列表',
    'file' => 'sina_vp.pages.inc',
    'weight' => -10,
		'type' => MENU_CALLBACK,		
  );
  	$items['VCenter/Active'] = array(//最新更新
    'title' => t('微铺街'),
    'page callback' => 'sina_VCenter_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'description' => '店铺列表',
    'file' => 'sina_vp.pages.inc',
    'weight' => -10,
		'type' => MENU_CALLBACK,		
  );
	
	//广场频道：新品 活动 爆款 特卖  真人秀 转让潮
	$plaza_types = array('News','Activity','Special','Sale','Show','Transfer');
	//广场子频道： 最近更新 评论最多 喜欢最多
	$plaza_child_types = array('recently_active','most_comments','most_favor');
	
	foreach ($plaza_types as $type) {
		$items["plaza/$type"] = array(
	    'title callback'  => 'plaza_title_callback',
    	'title arguments'  => array(1),
	    'page callback' => 'sina_vp_plaza',
	    'page arguments' => array(1),
	    'access callback' => TRUE,
	    'description' => '各种广场频道',
	    'file' => 'sina_vp.pages.inc',
	    'type' => MENU_CALLBACK,		
	  );
		$items["plaza/$type/json"] = array(
	    'title callback'  => 'plaza_title_callback',
    	'title arguments'  => array(1),
	    'page callback' => 'sina_vp_plaza',
	    'page arguments' => array(1,'all',null,2),
	    'access callback' => TRUE,
	    'description' => '各种广场频道',
	    'file' => 'sina_vp.pages.inc',
	    'type' => MENU_CALLBACK,		
	  );
		//function sina_vp_plaza($plaza_type='Shows',$child_type='all',$account=null,$json_type='html'){
		$items["plaza/$type/all/%user_uid_optional"] = array(//%user_uid_optional
		    'title callback'  => 'plaza_title_callback',
    		'title arguments'  => array(1),
		    'page callback' => 'sina_vp_plaza',
		    'page arguments' => array(1,2,3),
		    'access callback' => TRUE,
		    'description' => '所有的活动',
		    'file' => 'sina_vp.pages.inc',
		    'type' => MENU_CALLBACK,		
		);
		foreach ($plaza_child_types as $child_types) {
			$items["plaza/$type/$child_types/%user_uid_optional"] = array(//%user_uid_optional
		    'title callback'  => 'plaza_title_callback',
    		'title arguments'  => array(1),
		    'page callback' => 'sina_vp_plaza',
		    'page arguments' => array(1,2,3),
		    'access callback' => TRUE,
		    'description' => '所有的活动',
		    'file' => 'sina_vp.pages.inc',
		    'type' => MENU_CALLBACK,		
		  );
			$items["plaza/$type/$child_types/json"] = array(
	    'title callback'  => 'plaza_title_callback',
    	'title arguments'  => array(1),
	    'page callback' => 'sina_vp_plaza',
	    'page arguments' => array(1,2,null,3),
	    'access callback' => TRUE,
	    'description' => '各种广场频道',
	    'file' => 'sina_vp.pages.inc',
	    'type' => MENU_CALLBACK,		
	  );	
		}
	}
	//新品展示页
	$items['plaza'] = array(
    'title' => '广场',
    'page callback' => '_plaza_page_useless',
    'access callback' => TRUE,
    'description' => '所有的活动',
    'weight' => -11,
    'access callback' => TRUE,
    'menu_name' => 'primary-links',
  );
	
	$items['messages/view_vp/%privatemsg_thread'] = array(
    'title'            => 'Read message',
    'page callback'    => 'privatemsg_view_vp',
    'page arguments'   => array(2),
    'access callback'  => 'privatemsg_view_access4vp',
    'type'             => MENU_LOCAL_TASK,
    'weight'           => -5,
  );

	return $items;
}
/**
 * 获取广场分类，微博分类obj
 */
function vpj_get_terms_by_alias($plaza_type='ALL'){
	$obj = new stdClass();
	switch ($plaza_type) {
		case 'News':
				$obj->tid = 1;
				$obj->name = '新品';
				break;
		case 'Activity':
				$obj->tid = 2;
				$obj->name = '活动';
				break;	
		case 'Special':
				$obj->tid = 3;
				$obj->name = '爆款';
				break;	
		case 'Sale':
				$obj->tid = 4;
				$obj->name = '特卖';
				break;
		case 'Show':
				$obj->tid = 6;
				$obj->name = '真人秀';
				break;
	  case 'Transfer':
				$obj->tid = 5;
				$obj->name = '转让潮';
				break;							
			default:
				//$plaza_types = array('News','Activity','Special','Sale','Show','Transfer');
				$obj->tid = array(1,2,3,4,5,6);
				$obj->name = array('新品','活动','爆款','特卖','转让潮','真人秀');
				break;
	}
	return $obj;
}
function _plaza_page_useless()
{
	return 'wuyong';
}
function plaza_title_callback($plaza_type='ALL',$account=NULL){ //title callback
	$title = '广场|'.vpj_get_terms_by_alias($plaza_type)->name;
	if($account)$title = $account->name.'的'.$title;
	return $title;
}

function privatemsg_view_access4vp() {
  if (privatemsg_user_access('read privatemsg') && arg(1) == 'view_vp') {
    return TRUE;
  }
  return FALSE;
}
/**
 * Menu callback for viewing a thread.
 *
 * @param $thread
 *   A array containing all information about a specific thread, generated by
 *   privatemsg_thread_load().
 * @return
 *   The page content.
 * @see privatemsg_thread_load()
 */
function privatemsg_view_vp($thread) {
  drupal_set_title(check_plain($thread['subject']));

  // Generate paging links. 分页需要以后做。。。。more dale 2012-01-06
  /*$older = '';
  if (isset($thread['older_start'])) {
    $options = array(
      'query' => array('start' => $thread['older_start']),
      'title' => t('Display older messages'),
    );
     $older = l(t('<<'), 'messages/view/' . $thread['thread_id'], $options);
  }
  $newer = '';
  if (isset($thread['newer_start'])) {
    $options = array(
      'query' => array('start' => $thread['newer_start']),
      'title' => t('Display newer messages'),
    );
    $newer = l(t('>>'), 'messages/view/' . $thread['thread_id'], $options);
  }
  $substitutions = array('@from' => $thread['from'], '@to' => $thread['to'], '@total' => $thread['message_count'], '!previous_link' => $older, '!newer_link' => $newer);
  $title = t('!previous_link Displaying messages @from - @to of @total !newer_link', $substitutions);
  $content['pager_top'] = array(
    '#value'  => trim($title),
    '#prefix' => '<div class="privatemsg-view-pager">',
    '#suffix' => '</div>',
    '#weight' => -10,
  );

  // Display a copy at the end.
  $content['pager_bottom'] = $content['pager_top'];
  $content['pager_bottom']['#weight'] = 3;

  // Render the participants.
  $content['participants']['#value'] = theme('privatemsg_recipients', $thread);
  $content['participants']['#weight'] = -5;
*/
  // Render the messages.
  $output = '';
  foreach ($thread['messages'] as $pmid => $message) {
    // Set message as read and theme it.
    if (!empty($message['is_new'])) {
      privatemsg_message_change_status($pmid, PRIVATEMSG_READ, $thread['user']);
    }
		//dpm($message);
		$mid = $message['mid'];
		global $user;
		$participant_user = $message['author'];
		if($participant_user->uid==$user->uid){//当前用户自己靠右
			$side = 'R';		
		}else{$side = 'L';}
    //$output .= theme('privatemsg_view', $message);
    
		$output .='<a name="privatemsg-mid-'.$mid.'"></a>
		<div id="privatemsg-mid-'.$mid.'" class="pm-message privatemsg_'.$side.'">
			<div class="pm-message-picture">'.
				l(theme('imagecache', 'small_picture', $participant_user->picture, $participant_user->name, $participant_user->name, array('class'=>'pm-message-picture-img')),"UCenter/0/$participant_user->uid",array('html'=>TRUE,'attributes'=>array('class'=>'pm-message-picture-link')))
			.'</div>
			<div class="privatemsg-content privatemsg-content_'.$side.'">
				<div class="'.$side.'_msg">
					<span class="pm-message-who my">'.l($participant_user->name,"UCenter/0/$participant_user->uid").'：</span>
					<span class="pm-message-text">'.($message['is_new']?'<span class="marker">新</span>':'').(empty($message['body'])?$message['subject']:$message['body']).'</span>
					<div class="pm-message-info">
							<span class="pm-message-time fl">'.date("Y-m-d  H:i",$message['timestamp']).'</span>
							<span class="pm-message-option fr">'.l('回复','',array('fragment'=>'privatemsg-new')).'</span>
					</div>
				</div>
				<div class="arrow">'.($side=="R"?">":"<").'</div>
				<div class="clear"></div>
			</div>
		</div>';
  }
  $content['messages']['#value'] = $output;
  $content['messages']['#weight'] = 0;

  // Display the reply form if user is allowed to use it.
  if (privatemsg_user_access('write privatemsg')) {
    $content['reply']['#value'] = drupal_get_form('privatemsg_new', $thread['participants'], $thread['subject'], $thread['thread_id'], $thread['read_all']);
    $content['reply']['#weight'] = -5;
  }

  // Check after calling the privatemsg_new form so that this message is only
  // displayed when we are not sending a message.
  if ($thread['read_all']) {
    // User has permission to read all messages AND is not a participant of the current thread.
    drupal_set_message(t('This conversation is being viewed with escalated priviledges and may not be the same as shown to normal users.'), 'warning');
  }

  // Allow other modules to hook into the $content array and alter it.
  drupal_alter('privatemsg_view_messages', $content, $thread);//<div class="index_title">我和XXX的会话</div>
  return '<div class="index_total">共'.count($thread['messages']).'条对话</div>'.drupal_render($content);
}

function show_buyer_page($uid){
	$account = user_load($uid);
	if($account&&in_array('Seller',$account->roles)){
		return  t('good^_^');
	}else{		
		return t('nothing!您走错门了，我不是卖家！^_^');
	}
}
function sina_vp_menu_alter(&$items) {
	global $user;
	if(in_array('Seller',$user->roles)&&0){
		//对于卖家，个人中心不显示  my转让   my真人秀
		$vocabularies = taxonomy_get_vocabularies(t('weibo'));
		$vid ='';
		foreach($vocabularies as $key=>$vocabulary){
			if($vocabulary->name == t('微博频道')) {
				$vid = $key;
			}
		}
		$Buyer_tid = taxonomy_get_term_by_name(t('Buyer'));
		$parent = $Buyer_tid['0']->tid; //23
		$Buyer_taxonomy_tree=taxonomy_get_tree($vid, $parent, $depth = -1, $max_depth = NULL);
			foreach($Buyer_taxonomy_tree as $term){dpm($term,$term->tid);
			$items['UCenter/'.$term->tid]['access arguments'] = array('add new Buyer info');
		}
		//隐藏卖家的     我的关注(0)    我关注的买家(1)只显示 关注 我的粉丝  ????css
		//include_once(drupal_get_path('module', 'user_relationships_api') .'/user_relationships_api.module');
		//foreach (user_relationships_types_load() as $rtid => $relationship) {
		//	$items["relationships/{$rtid}"]['access callback'] = 'user_access';
		//	$items["relationships/{$rtid}"]['access arguments'] = array('add new Buyer info');
		//	$items["relationships/{$rtid}"]['hidden']=1;
	  // }
	//if($user->id==0)$items['UCenter']['access callback'] = FALSE;
		// Example - disable the page at node/add
	}
  $items['node/add']['access callback'] = FALSE;
  $items['node/add/weibo']['access callback'] = FALSE;
	$items['vp/add/Transfer']['access callback'] = FALSE;
	$items['vp/add/Show']['access callback'] = FALSE;
	$items['messages']['hidden'] = 1;
}
/**
 * Menu item title callback - use the user name if it's not the current user.
 */
function user_shop_title($account) {
  if ($account->uid == $GLOBALS['user']->uid) {
    return t('My account');
  }
  return $account->name;
}
/**
 * 新添数据库记录关联节点，存储新浪微博元数据. 
 */
function sina_vp_type_preprocess($sina_vp_type){
	switch ($sina_vp_type) {
		case 'value':
			
			break;
		
		default:
			
			break;
	}
	
}

/**
 * weibo数据库写入.
 *
 * @param $data
 * 	新浪微博返回的json data.
 * @param $node
 *   节点或评论
 * @param $tid
 *   int weibo频道
 * @param $zid
 *   被转发/评论/秀/转让的节点nid
 */
function _sina_vp_db_write($data,$node,$tid=NUll,$zid=NULL){
	//if(is_array($node)){watchdog('$typedug', '<pre>'.print_r(debug_backtrace(),TRUE));}
	
		if(isset($node->type)){//if $node is a node 拥有type属性
			$nid = $node->nid;
			$cid = 0;
			$datas = $node->title;
		}elseif(isset($node[cid])){//if is $comment is_array &&cid属性
			$nid = $node[nid];
			$cid = $node[cid];
			$datas = $node[subject];
		}
		global $user;
		if(!empty($data)&&(!is_null($data))){//离线wdata字段为标题
			$wdata = json_decode($data);
			$datas = $data;
		}  
		$wid   = $wdata?$wdata->id:0;
		$created_at = $wdata->created_at?strtotime($wdata->created_at):time();
		
		if($cid){ //转发评论时计入数据2条，做一下判断，如果存在，不再插入
			if(db_result(db_query('select `cid` from {sina_vp_weibo2node} where `cid`=%d ',$cid))){
				return;
			};		
		}
		if($zid){//分享的分享==转发的转发 只要根
				$is_zf_sql = "SELECT zid zid FROM  {sina_vp_weibo2node} WHERE  `nid` =$zid AND  `cid` =0 AND  `zid` <>0 ";
				$is_zf = db_result(db_query($is_zf_sql));
				$zid=$is_zf?$is_zf:$zid;
				$z_uid = db_result(db_query("SELECT uid uid FROM  {node} WHERE  `nid` =$zid")); //dale 添加被转发节点的uid。20120313
		}
		db_query("INSERT INTO {sina_vp_weibo2node}
						(`nid` ,`uid` ,`cid`,`wid` ,`data`,`created_at`,`sina_vp_type`,`zid`,`z_uid`)
						VALUES ('%d','%d','%d','%d','%s','%d','%d','%d','%d')"
						,$nid,$user->uid,$cid,$wid,$datas,$created_at,$tid,$zid,$z_uid);
						//more... 是否需要分2个表 nid zid
		
}

/**
 * Implementation of hook_form_alter(). 
 * @Where sina_vp_open_set_tweet_form in sina_open.module
 * @Do before set_tweet ,insert into our Additional db_table sina_weibo2node info.
 */
function sina_vp_form_alter(&$form, &$form_state, $form_id) {
/**
 * hidden other thing when post a new weibo (type) node..
 */
	if($form_id == 'weibo_node_form'){
		$form['comment_settings']['#access']=FALSE;	
		$form['menu']['#access']=FALSE;	
		$form['revision_information']['#access']=FALSE;	
		$form['buttons']['preview']['#access']=FALSE;	
		$form['author']['#access']=FALSE;
		$form['options']['#access']=FALSE;
	
		//jquery_ui_add('ui.sortable'); 
		//drupal_add_js(drupal_get_path('module', 'sina_vp') .'/js/jquery-ui-1.8.16.min.js');
		//drupal_add_js(drupal_get_path('module', 'sina_vp') .'/js/jquery.ui.widget.js');		
		// @提醒 ：：：：：drupal_add_js(drupal_get_path('module', 'sina_vp') .'/js/jquery.ui.autocomplete.js');		
		//drupal_add_js(drupal_get_path('module', 'sina_vp') .'/js/mentions.js');//@补全
		//drupal_add_css(drupal_get_path('module', 'sina_vp') .'/css/jquery-ui.css');
		$form['title'] = array(
		  '#type' => 'textarea',//field
		  '#description' => '<span class="sina_open_tweet_text_count"><strong id="sina_open_tweet_text_count"></strong>/140</span>',
		  /* // @提醒 ：：：：
		  <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js">JQUERY18 = jQuery.noConflict();</script>
		  <link media="all" type="text/css" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/themes/base/jquery-ui.css" rel="stylesheet" />
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js"></script>',*/
		  '#title' => '有什么新鲜事告诉大家',
		  '#default_value' => $form['title']['#default_value'],
		  '#rows' => 4,
		  //'#element_validate' =>array('sina_vp_weibo_length_validate'),
		  //'#prefix' => '<div id="weibo-add-page">',
  		//'#suffix' => '</div>',
		  //'#field_prefix' => 'users photo here',	  
		  //'#field_suffix' => t('MB')
		  '#required' => TRUE,
		  //'#resizable' => FALSE,
		);
		$form['title']['#attributes'] = array('class' => 'publish-weibo');
		$form['title']['#autocomplete_path']='user/autocomplete';
		$form['flag']['#access']=FALSE;
		$form['body_field']['#access']=FALSE;				
		//$form['taxonomy']['#access']=FALSE; // 关于分类 还需要做autotag
	  //$form['taxonomy']['2']['#disabled']=TRUE;
	  $form['taxonomy']['tags']['1']['#access']=FALSE;
		$form['#validate'][] = 'weibo_node_form_tags_validate';//话题##
		$form['#validate'][] = 'weibo_node_form_maxlength_validate';		
		$form['#validate'][]= 'weibo_node_form_img_validate';//微博图片
		$form['field_weibo_image']['#weight']=-99;
		$form['field_weibo_image']['0']['#title']='图片预览';
		
		// 秀 和转让 不带淘宝链接。
		if(arg(1)==5||arg(1)==6){
			$form['field_image_link']['#access']=FALSE;
		}
		
		$form['path']['#access']=FALSE;
	}
	if($form['sina_open'] && $form_id == 'weibo_node_form'){
		$form['add_option']=array(
			'#type' =>'item',
		    //'#value' =>'<span id="face"><a class="facexy" href="javascript:;">表情</a></span> <span id="img"><a onclick="">图片</a></span>|<span id="topic"><a class="topic"  href="javascript:;">话题</a></span>|<span id="atta">@TA</span>'
		    '#value' =>'<span id="img" class="weibo_add_image"><a id="weibo_add_img" onclick="">图片</a></span> <span id="topic"><a class="topic"  href="javascript:;">话题</a></span>'
			            	/*<div id="faceWrap" style="display:none;"><a href="javascript:;" title="[呵呵]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/eb/smile.gif"></a><a href="javascript:;" title="[嘻嘻]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/c2/tooth.gif"></a><a href="javascript:;" title="[哈哈]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/6a/laugh.gif"></a><a href="javascript:;" title="[爱你]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/7e/love.gif"></a><a href="javascript:;" title="[晕]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/a4/dizzy.gif"></a><a href="javascript:;" title="[泪]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d8/sad.gif"></a><a href="javascript:;" title="[馋嘴]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/b8/cz_org.gif"></a><a href="javascript:;" title="[抓狂]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/4d/crazy.gif"></a><a href="javascript:;" title="[哼]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/19/hate.gif"></a><a href="javascript:;" title="[可爱]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/9c/tz_org.gif"></a><a href="javascript:;" title="[怒]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/57/angry.gif"></a><a href="javascript:;" title="[汗]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/13/sweat.gif"></a><a href="javascript:;" title="[困]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/8b/sleepy.gif"></a><a href="javascript:;" title="[害羞]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/05/shame_org.gif"></a><a href="javascript:;" title="[睡觉]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/7d/sleep_org.gif"></a><a href="javascript:;" title="[钱]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/90/money_org.gif"></a><a href="javascript:;" title="[偷笑]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/7e/hei_org.gif"></a><a href="javascript:;" title="[酷]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/40/cool_org.gif"></a><a href="javascript:;" title="[衰]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/af/cry.gif"></a><a href="javascript:;" title="[吃惊]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/f4/cj_org.gif"></a><a href="javascript:;" title="[闭嘴]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/29/bz_org.gif"></a><a href="javascript:;" title="[鄙视]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/71/bs2_org.gif"></a><a href="javascript:;" title="[挖鼻屎]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/b6/kbs_org.gif"></a><a href="javascript:;" title="[花心]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/64/hs_org.gif"></a><a href="javascript:;" title="[鼓掌]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/1b/gz_org.gif"></a><a href="javascript:;" title="[失望]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/0c/sw_org.gif"></a><a href="javascript:;" title="[思考]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/e9/sk_org.gif"></a><a href="javascript:;" title="[生病]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/b6/sb_org.gif"></a><a href="javascript:;" title="[亲亲]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/8f/qq_org.gif"></a><a href="javascript:;" title="[怒骂]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/89/nm_org.gif"></a><a href="javascript:;" title="[太开心]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/58/mb_org.gif"></a><a href="javascript:;" title="[懒得理你]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/17/ldln_org.gif"></a><a href="javascript:;" title="[右哼哼]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/98/yhh_org.gif"></a><a href="javascript:;" title="[左哼哼]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/6d/zhh_org.gif"></a><a href="javascript:;" title="[嘘]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/a6/x_org.gif"></a><a href="javascript:;" title="[委屈]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/73/wq_org.gif"></a><a href="javascript:;" title="[吐]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/9e/t_org.gif"></a><a href="javascript:;" title="[可怜]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/af/kl_org.gif"></a><a href="javascript:;" title="[打哈气]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/f3/k_org.gif"></a><a href="javascript:;" title="[做鬼脸]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/88/zgl_org.gif"></a><a href="javascript:;" title="[握手]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/0c/ws_org.gif"></a><a href="javascript:;" title="[耶]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d9/ye_org.gif"></a><a href="javascript:;" title="[good]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d8/good_org.gif"></a><a href="javascript:;" title="[弱]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d8/sad_org.gif"></a><a href="javascript:;" title="[不要]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/c7/no_org.gif"></a><a href="javascript:;" title="[ok]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d6/ok_org.gif"></a><a href="javascript:;" title="[赞]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d0/z2_org.gif"></a><a href="javascript:;" title="[来]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/40/come_org.gif"></a><a href="javascript:;" title="[蛋糕]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/6a/cake.gif"></a><a href="javascript:;" title="[心]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/6d/heart.gif"></a><a href="javascript:;" title="[伤心]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/ea/unheart.gif"></a><a href="javascript:;" title="[钟]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d3/clock_org.gif"></a><a href="javascript:;" title="[猪头]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/58/pig.gif"></a><a href="javascript:;" title="[咖啡]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/64/cafe_org.gif"></a><a href="javascript:;" title="[话筒]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/1b/m_org.gif"></a><a href="javascript:;" title="[干杯]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/bd/cheer.gif"></a><a href="javascript:;" title="[绿丝带]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/b8/green.gif"></a><a href="javascript:;" title="[蜡烛]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/cc/candle.gif"></a><a href="javascript:;" title="[微风]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/a5/wind_org.gif"></a><a href="javascript:;" title="[月亮]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/b9/moon.gif"></a><a href="javascript:;" title="[织]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/41/zz2_org.gif"></a><a href="javascript:;" title="[围观]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/f2/wg_org.gif"></a><a href="javascript:;" title="[威武]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/70/vw_org.gif"></a><a href="javascript:;" title="[奥特曼]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/bc/otm_org.gif"></a><a href="javascript:;" title="[宅]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d7/z_org.gif"></a><a href="javascript:;" title="[帅]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/36/s2_org.gif"></a><a href="javascript:;" title="[跳舞花]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/70/twh_org.gif"></a><a href="javascript:;" title="[围脖]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/3f/weijin_org.gif"></a><a href="javascript:;" title="[温暖帽子]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/f1/wennuanmaozi_org.gif"></a><a href="javascript:;" title="[手套]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/72/shoutao_org.gif"></a><a href="javascript:;" title="[雪]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/00/snow_org.gif"></a><a href="javascript:;" title="[雪人]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/d9/xx2_org.gif"></a><a href="javascript:;" title="[左抱抱]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/54/left_org.gif"></a><a href="javascript:;" title="[右抱抱]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/0d/right_org.gif"></a><a href="javascript:;" title="[礼物]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/c4/liwu_org.gif"></a><a href="javascript:;" title="[爱心传递]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/c9/axcd_org.gif"></a><a href="javascript:;" title="[照相机]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/33/camera_org.gif"></a><a href="javascript:;" title="[落叶]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/79/yellowMood_org.gif"></a><a href="javascript:;" title="[白云]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/ff/y3_org.gif"></a><a href="javascript:;" title="[给力]"><img width="22px" height="22px" src="http://img.t.sinajs.cn/t3/style/images/common/face/ext/normal/c9/geili_org.gif"></a></div>',
		*/);
		if(arg(0)=='forward'){ //转发分享 不带表情,图片啥的。
		
			$form['add_option']=array(
				'#type' =>'item',
			    '#value' =>'',
			);
			unset($form['add_option']);
			unset($form['field_image_link']);
			$form['title']['#title']='好东西就是要分享';
			if(arg(3)=='ajax'){//forward/tid/nid/ajax
				$form['title']['#description']='';
				$form['title']['#title'] = '分享给你的朋友';
				$form_state['redirect']=array(
				  $_GET['q'], // uri
				  array( // query params
				    'page' =>  $_GET['page'],
				  ),
				);
			}
			//
			$form['buttons']['submit']['#value']='分享';
		}
		$sina_bind_array=sina_vp_t_get_info();
		$checkbox_default_value=$sina_bind_array['sina'];
		$form['sina_vp_open'] = array(
      '#type' => 'checkbox',
      '#title' => '同步到新浪',
      '#default_value' => $checkbox_default_value,
    );
		if(!$checkbox_default_value){//如果没有绑定微博，不可选
			 $form['sina_vp_open']['#disabled']=TRUE;
		}
		unset($form['sina_open']);
	}


	if(($form_id == 'weibo_node_form' && arg(0)=='new')	||
		($form_id == 'weibo_node_form' && arg(0)=='forward') ){
		// new/$tid & forward/$tid/$nid分享 转发时默认节点分类
		$vocabularies = taxonomy_get_vocabularies(t('weibo'));
	  foreach ($vocabularies as $vocabulary) {
	    if(check_plain($vocabulary->name)==t('微博频道')){
	    	$vid=$vocabulary->vid;
				break;
	    }
	  }
		$tid=arg(1);
		if($term = taxonomy_get_term($tid)){			
			$form['taxonomy'][$vid]['#default_value'] = $tid;
			$form['taxonomy'][$vid]['#description'] = $term->name;
			//博文类型
			$form['sina_vp_type'] = array(
				'#type' => 'value',
				'#default_value' =>$tid,
				'#access' => FALSE,
				'#description' => $term->name,
			);
		}
		//对分享的分享 默认值处理。。。 forward/$tid/$nid分享
		if($form_id == 'weibo_node_form' && arg(0)=='forward'){
				$nid= arg(2);
				$node = node_load($nid);
			 	$is_zf_sql = "SELECT zid zid FROM  {sina_vp_weibo2node} WHERE  `nid` =$nid AND  `cid` =0 AND  `zid` <>0 ";
				$is_zf = db_result(db_query($is_zf_sql));
				if($is_zf){
					$form['title']['#default_value' ]= "//@$node->name ：".$node->title;
				}
		} 
	}
	/////
	if($form_id == 'profile_node_form'){ //content_profile 从sina抓取默认填表单或从profile扩展里抓
		//$node=node_load($form['nid']['#value']);
		//$user = user_load($form['uid']['#value']);
		//
		//profile_load_profile(&$user);
		//dpm($user);
		if($params['user_id'] = sina_vp_get_sina_uid($form['uid']['#value'])){
    	$donext=TRUE;
			$request_url = 'http://api.t.sina.com.cn/users/show.json';
			$result = sina_open_t_set_request($request_url,$params);
    }	
		if($donext && $result->code == 200) {
			if(!($form['title']['#default_value'])){				
				$form['title']['#default_value'] = json_decode($result->data)->name;
			}
			if($form['field_profile_sex']['#default_value']['0']['value']==0){		
				switch (json_decode($result->data)->gender) {
						case 'm':
							$sex = '1';
							break;
						case 'f':
							$sex = 2;
							break;
						default:
							$sex = 0;
							break;
				}
				$form['field_profile_sex']['#default_value']['0']['value'] = (int)$sex;
			}
			if(!($form['field_profile_url']['0']['#default_value']['value'])){				
				$form['field_profile_url']['0']['#default_value']['value'] = json_decode($result->data)->url;
			}
			if(!($form['field_profile_signature']['0']['#default_value']['value'])){				
				$form['field_profile_signature']['0']['#default_value']['value'] = json_decode($result->data)->description;
			}						
			if(!($form['field_profile_province']['0']['#default_value']['value']) || is_null($form['field_profile_city']['0']['#default_value']['value'])){
				$profile_province_id =json_decode($result->data)->province;
				$profile_city_id =json_decode($result->data)->city;
				$request_url = 'http://api.t.sina.com.cn/provinces.json';
				$result = sina_open_t_set_request($request_url);
				$data = json_decode($result->data)->provinces;
				foreach($data as $key=>$value){
					if($value->id==$profile_province_id){$province_name=$value->name;$city_array=$value->citys;}
				}					
				foreach($city_array as $key=>$value){
					foreach($value as $key2=>$city){						
						if($key2==$profile_city_id){$city_name=$city;}
					}
				}
				$form['field_profile_province']['0']['#default_value']['value'] = $province_name;
				$form['field_profile_city']['0']['#default_value']['value'] = $city_name;
			}
		}

	}

}

/**
 * 发私信时标题==body
 */
function pm_send_submit_4vp($form, &$form_state) {
	//$form_state['values']['body']=$form_state['values']['subject'];
}
/**
 * 发布微博  可选图片/必选图片。
 */
function weibo_node_form_img_validate($form, &$form_state) {//need_pic_form_validate
	 if (!$form_state['values']['field_weibo_image']['0']['fid'] && arg(0)!=forward ) {
	 //0  转发分享的时候，不需要图片
    form_set_error('field_weibo_image', '亲，需要上传图片哦～');
  }
}
/**
 * 发布微博   》140字
 * */
function weibo_node_form_maxlength_validate($element, &$form_state) {     
      $subject = $form_state['values']['title'];
			if(utf8_strlen($subject)>140){
				form_set_error('field_weibo_image', t('亲，都超过140个字啦～'));
			}
			$form_state['values']['title']=truncate_utf8($subject,140,FALSE,TRUE);			
}
   

    // 计算中文字符串长度
    function utf8_strlen($string = null) {
    // 将字符串分解为单元
    preg_match_all("/./us", $string, $match);
    // 返回单元个数
    return count($match[0]);
    }
 		//$zhStr = ‘您好，中国！’;
   // $str = ‘Hello,中国！’;
   // echo utf8_strlen($zhStr); // 输出：6
    //echo utf8_strlen($str); // 输出：9
/**
 * 发布微博 话题 对##标签处理
 */
function weibo_node_form_tags_validate($form, &$form_state) {
	 $pattern = '/#([^\\#|.]+)#/';
	 //$pattern_at = '/@([^\\@|\s{1}]+)/';
	 $subject = $form_state['values']['title'];
	 //$counts = preg_match_all($pattern_at, $subject,$match_at); 
	 $subject = str_replace(' ', '', $subject);
	 preg_match_all($pattern, $subject,$match_tags);
	 $match_tags = array_unique($match_tags['1']);
	 $tags = implode(',',$match_tags);
	 //$form_state['values']['taxonomy']['tags']['1'] .= ','.$tags;
   $form_state['values']['taxonomy']['tags']['1'] = $tags; 
}

/**
 * weibo type taxonomy termid 2=微薄频道下的  (1-6)新品，活动，爆款，特卖，转让，真人秀
 * @param $sina_vp_type
 *   int
 * @return
 *   string
 */
function sina_vp_get_type_by_int($sina_vp_type){
	if(is_int($sina_vp_type)){
		switch ($sina_vp_type) {
			case '1':
				$sina_vp_type = 'Product';
				break;
			case '2':
				$sina_vp_type = 'Activity';
				break;
			case '3':
				$sina_vp_type = 'Special';
				break;
			case '4':
				$sina_vp_type = 'Sale';
				break;
			case '5':
				$sina_vp_type = 'Transfer';
				break;
			case '6':
				$sina_vp_type = 'Show';
				break;
			default:
				drupal_set_message('2011:no get_sina_vp_type.','error');
				break;
		}
	}
	return $sina_vp_type;
}
/**
 * weibo type taxonomy termid 2=微薄频道下的  (1-6)新品，活动，爆款，特卖，转让，真人秀
 * @param $sina_vp_type
 *   string
 * @return
 *   int
 */
function sina_vp_get_type_by_string($sina_vp_type){
	if(is_string($sina_vp_type)){
		switch ($sina_vp_type) {
			case 'Product':
				$sina_vp_type = 1;
				break;
			case 'Activity':
				$sina_vp_type = 2;
				break;
			case 'Special':
				$sina_vp_type = 3;
				break;
			case 'Sale':
				$sina_vp_type = 4;
				break;
			case 'Transfer':
				$sina_vp_type = 5;
				break;
			case 'Show':
				$sina_vp_type = 6;
				break;
			default:
				drupal_set_message('no get_sina_vp_type','error');
				break;
		}
	}
	return $sina_vp_type;
}
/**
  * @return
 *   string
 */
function sina_vp_get_type_by_node($nid){
	$node = node_load($nid);
	foreach($node->taxonomy as $key=>$value){
		return sina_vp_get_type_by_int($key);
	};
}
/**
 * hook_link_alter
 */
/**
 * Implementation of hook_link().
 */
function sina_vp_link($type, $node = NULL, $teaser = FALSE) {
   $links = array();
	 global $user;
  if ($node->uid!=$user->uid && $type == 'node' && $node->type == 'weibo') {
		foreach($node->taxonomy as $key=>$obj){
			if($obj->vid==2){ //vid=2 微博类型
				//$taxonomy_name=$obj->name;
				$tid = $obj->tid;	
			}
		};
	
		
		$parents_taxonomy = taxonomy_get_parents($tid);
		foreach($parents_taxonomy as $key=>$value){
			$p_tid = $key;
			$Buyer_tid = taxonomy_get_term_by_name(t('Buyer'));
			if($p_tid!=$Buyer_tid['0']->tid){
				$donext=TRUE;// 转让和分享不能再秀了！～
			}
		};

			$vocabularies = taxonomy_get_vocabularies(t('weibo'));
			$vid ='';
			foreach($vocabularies as $key=>$vocabulary){
				if($vocabulary->name == t('微博频道')) {
					$vid = $key;
				}
			}
			$Buyer_tid = taxonomy_get_term_by_name(t('Buyer'));
			$parent = $Buyer_tid['0']->tid; //23
			$Buyer_taxonomy_tree=taxonomy_get_tree($vid, $parent, $depth = -1, $max_depth = NULL);	
	
		if(user_access('add new Buyer info') && $donext){//&& $sina_vp_type!='Show' && $sina_vp_type!='Transfer'
				// 转让和分享不能再秀了！～
			foreach($Buyer_taxonomy_tree as $term){
				$links['link_'.$term->tid] = array(
			    'title' => t($term->name), 
			    'href' => "new/$term->tid/$node->nid", 
			    //'query' => 'redirect=node', 
			    //'fragment' => 'anchorname', 
			    'attributes' => array('title' => t('发布'.$term->name)),
	  		);
			}
			//$links['link_6']['title'] = '秀一下';
			if($links['comment_add']){$links['comment_add']['title'] = '评论';}			 
		}
  }

  return $links;
}
function sina_vp_link_alter(&$links, $node, $comment=NULL){
	global $user;
	if($node->type == 'weibo'){ //自己的微博，不评论
		//unset($links['comment_add']);//$node->uid==$user->uid && 
		//unset($links['comment_comments']); 
		//unset($links['flag-bookmarks']); 
	}
	if(arg(0)=='node'){//去掉node/256页上的link 喜欢(1) 转发分享
		if(node_load(arg(1))->nid){
			//unset($links['flag-bookmarks']);
			//unset($links['forward_link']);			
		}
	}
}
/**
 * 发带图片的微博   节点 
 * @param (string) $text
 *  文字内容
 * @param (string) $url
 *  访问地址
 * @param (mixd) $node 
 *  节点
 */
function sina_open_t_set_tweet2($text, $url = NULL,$node=NUll) { //dale $node=NUll
  sleep(2);
  $tid = arg(1); //foward/tid/nid/
	$nid = arg(2); //new/$term_id/$nid
  if (isset($url)) {
		//短网址服务 ~=140字
		$result = sina_open_t_set_request(
			    'http://api.t.sina.com.cn/short_url/shorten.json',
			    array('url_long' => $url)
			  );
		$data = json_decode($result->data);
		if ($result->code == 200) {
			$url=$data['0']->url_short;	
		}
    $len = drupal_strlen($url);
  } else {
    $len = 0;
  }
	$url = NULL; //未上线之前,不带url发布到新浪上.
  $len = 140 - drupal_strlen($text) - $len;//+ ? - 
  
  if ($len < 0) {
    $text = drupal_substr($text, 0, $len);
  }
  //对是否绑定微博做判断
  global $user;
	 
	 //1. 无绑定，不同步，2.绑定取消管勾 3.对于评论，如果根节点不再新浪上，也是false。

  //对评论或发布判断。
  $donext=false;
	if(isset($node->type)){//if is $node 拥有type属性
		 //节点
		 if ($node->sina_vp_open && db_result(db_query('SELECT uid FROM {sina_open_user} WHERE uid = %d', $user->uid))) {//1. 无绑定，不同步
		 		$t_set_request=true;
		 }
		$donext=true;
	}elseif(isset($node[cid])){//if is $comment is_array &&cid属性
		 //评论 ，如果根节点不再新浪上，也是false。
		 if ($node['sina_vp_open'] && db_result(db_query('SELECT uid FROM {sina_open_user} WHERE uid = %d', $user->uid))) {//1. 无绑定，不同步
		 		$t_set_request=true;
		 }
		$request_url='http://api.t.sina.com.cn/statuses/comment.json'; //API2
		//$wid= sina_vp_get_wid($node['nid']);
		$mid = sina_vp_get_mid($node['nid']);
		//应该使用mid？？？？API2???
		$params['id'] = $mid;//3400244576516952
		$params['comment'] = urlencode($text. $url);
		$params['without_mention'] = 0;
		$params['comment_ori'] = 1;
		if($t_set_request&&$mid){			
			$result = sina_open_t_set_request($request_url,$params);
			$data = json_decode($result->data);
			if ($result->code == 200) {
				drupal_set_message('评论已成功同步到新浪微博!');	
			} else {
				drupal_set_message('评论失败，新浪微博返回结果： '.$data->error);
			}	
		}
		
		$node_root = node_load($node['nid']);//$node[nid]=$comment[nid]  
		foreach($node_root->taxonomy as $key=>$value){
			$tid = $key;
		};
		if(isset($result)){
			$c_title=$result->data?$result->data:'';
		}else{
			$c_title='';
		}
		_sina_vp_db_write($c_title,$node,$tid,$node['nid']);
		return;
	}
	if($donext){//发布节点，同步新浪微博	new/$tid  new/$tid/$nid
	  if(arg(0)=='forward'){
	  	//分享 转发api forward/$tid/$nid
			$params['id'] = sina_vp_get_mid($nid);//sina_vp_get_wid($nid);
			$params['status'] = urlencode($text. $url); 
			//是否在转发的同时发表评论。0表示不发表评论，1表示发表评论给当前微博，2表示发表评论给原微博，3是1、2都发表。默认为0。 
			$params['is_comment'] = 0;
			$request_url = 'http://api.t.sina.com.cn/statuses/repost.json';
			if($t_set_request){			
				$result = sina_open_t_set_request($request_url,$params);
				if(function_exists(dpm)) dpm(json_decode($result->data),'微博返回信息');		
			  if ($result->code == 200) {	    					  			
					drupal_set_message('已成功同步到新浪微博！');
			  }else{
			    drupal_set_message('同步新浪微博失败，可能原帖在新浪上被删除或者您的网络环境不稳定，但并不影响您在本站的发布。错误代码：2011100701。', 'warning');
			  }
			}
		  _sina_vp_db_write($result->data,$node,$tid,$nid);		  
			return;
		}
	  if(is_null($node->field_weibo_image[0])){//new/$tid
	  	if($t_set_request){			
				$result = sina_open_t_set_request(
			    'http://api.t.sina.com.cn/statuses/update.json',
			    array('status' => urlencode($text. $url))
			  );
				if(function_exists(dpm)) dpm(json_decode($result->data),'微博返回信息');		
			  if ($result->code == 200) {	    					  			
					drupal_set_message('已成功发送到新浪微博');
			  }else{
			    drupal_set_message('您的网络环境不稳定，发送到新浪微博失败，错误代码：201110070100。', 'warning');
			  }
			}
		  _sina_vp_db_write($result->data,$node,$tid,$nid);		  
			return;
	  }else{//发 布图片微薄
	  	$status =	urlencode($text. $url);
	  	$pic_path = $node->field_weibo_image[0][filepath];
		  global $user;
			module_load_include('php', 'sina', 'api/weibooauth');
			module_load_include('php', 'sina', 'api/config'); //WB_AKEY , WB_SKEY	
			$token = sina_open_get_access_token($user->uid);
			if(empty($token)){
				//module_load_include('inc', 'sina_open', 'sina_open.pages');
				//return sina_open_page_config(user_load($user->uid));
				drupal_set_message('亲，想不想你的微博也同步到新浪上，获得更多关注啊！！！'.l('立即绑定','sina_open/t_login'));
			}
			$last_key[oauth_token]=$token->key;
			$last_key[oauth_token_secret]=$token->secret;
			$_SESSION['last_key'] = $last_key;
			if($t_set_request){			
				$c = new WeiboClient( WB_AKEY , WB_SKEY ,$token->key ,$token->secret );
				$result = $c->upload($status , $pic_path);
				if (is_array($result)) {
					drupal_set_message('已成功发送到新浪微博ok with pic');
					//if(function_exists(dpm)) dpm(json_decode($result->data));				
				} else {
				  drupal_set_message('同步失败，请检查您的网络！', 'error');
				  //return false;
				}
				if(function_exists(dpm)) dpm($result,'图片微博返回数据');
				_sina_vp_db_write(json_encode($result),$node,$tid,$nid);	
			}else{
				_sina_vp_db_write('',$node,$tid,$nid);
			}					
		return;
	  }
  }
}
/**
 * time format function.
 */
function sina_vp_time_format($created_at){
	//$created_at= Thu Sep 22 14:34:21 +0800 2011
	//$created_at=strtotime($created_at);
	$minutes=ceil((time()-$created_at)/60);
	if($minutes<60){
		return $minutes.'分钟前';
	}elseif($show_hours=ceil($minutes/60)<12){
		return $show_hours.'小时前';
	}elseif(ceil($minutes/60)<24 && date("d",time())==date("d",$created_at)){
		return '今天 '.date("H:i",$created_at);
	}elseif(date("Y")==date("Y",$created_at)){
		//return date("<p>m月d日</p><p>H:i</p>",$created_at);
		return 	date('m月d日',$created_at).date('H:i',$created_at);
	}else{
		return 	date('Y-m-d',$created_at).date('H:i',$created_at);
	}
}
/**
 *  replace a url text to <a>link</a> not use l()
 *  天空蔚蓝，天空依然蔚蓝。http://t.cn/adPO8F
 *  ==>天空蔚蓝，天空依然蔚蓝。<a href="http://t.cn/adPO8F">http://t.cn/adPO8F</a>
 * */
function sina_vp_url_format($string){
	$reg='/http:\/\/([\w.]+\/?)\S*/';
	$total_length=strlen($string);

	//删除最后一个出现的url
	for($i=4;$i<$total_length;$i++)
	{
		$temp=substr($string,-1*$i,$i);
		if(preg_match($reg,$temp)>0)
		{
			$string=substr($string,0,$total_length-$i);
			$i=$total_length+100;
		}
	}
	
	$result=preg_replace_callback($reg,"sina_vp_url_replace",$string);//此处调用下面的函数
	return $result;
}
function sina_vp_url_replace($string){
	$new_url='<a href="'.$string[0].'">'.$string[0].'</a>';
	return $new_url;
}
/**
 *  weibo_id
 * */
function get_nid_by_wid($wid){
  $sql="SELECT nid
          FROM {sina_vp_weibo2node}
          WHERE wid ='".$wid."'";
  $result =db_query($sql);
  if($row= db_fetch_array($result)){
     return $row['nid'];
  }
	drupal_set_message('error! when get nid by wid.'.__FILE__.__LINE__);
	return 0;
}

/**
 * get wid by nid
 */
function sina_vp_get_wid($nid){
	$result=db_query("SELECT `wid` wid FROM {sina_vp_weibo2node} WHERE `nid`=%d and `cid`=0",$nid);
	return db_result($result);
}
function sina_vp_get_mid($nid){
	$result=db_fetch_object(db_query("SELECT `data` data FROM {sina_vp_weibo2node} WHERE `nid`=%d and `cid`=0",$nid));	
		
	return $mid = json_decode($result->data)->mid;
}
/**
 *  node_link_alter
 * */
function node_link_alter($type, $node = NULL, $teaser = FALSE) {
  $links = array();
  if (0&&$type == 'weibo') {
    if ($teaser == 1 && $node->teaser && !empty($node->readmore)) {
      $links['node_read_more'] = array(
        'title' => t('Read more'), 
        'href' => "node/$node->nid",
        'attributes' => array('title' => t('Read the rest of !title.', array('!title' => $node->title))),
      );
    }
  }
  return $links;
}
/**
 * Implementation of hook_theme()
 */
function sina_vp_theme() {
  return array(
  	'weibo_page_default' => array(
    	'arguments' => array('form' => NULL)
    ),
  );
}
/**
 * 节点输出对title或body的微博分类输出
 * [卖家/买家]发布了[新品/爆款](XXXX)
 */
function sina_vp_context_preprocess(&$node){
	$sina_vp_type = sina_vp_get_type_by_node($node->nid);
	global $user;
	$output ='';
	//转发了 发布了 分享了 秀了 转让了	
	/*if((is_null(arg(1)) && (arg(0)=='VpCenter' || arg(0)=='UCenter'))){
		$output .= '【'.t($sina_vp_type).'】';
		if($node->uid==0 || $node->uid==$user->uid){//我发布的内容不添加标签，但是在大厅里要添加，频道里不添加							
		}else{			
			$output .= t('<a href="@user">@'.user_load($node->uid)->name.' </a>',array('@user' => url('user/').$node->uid));
		}
	}elseif(is_null(arg(1)) && (arg(0)=='Show' || arg(0)=='Transfer')){
		if($node->uid==0 || $node->uid==$user->uid){//我发布的内容不添加标签，但是在大厅里要添加，频道里不添加							
		}else{			
			$output .= t('<a href="@user">@'.user_load($node->uid)->name.' </a>',array('@user' => url('user/').$node->uid));
		}
	}else{
		if($node->uid==0 || $node->uid==$user->uid){//我发布的内容不添加标签，但是在大厅里要添加，频道里不添加							
		}else{			
			$output .= t('<a href="@user">@'.user_load($node->uid)->name.' </a>',array('@user' => url('user/').$node->uid));
		}	
	}*/
	$output .= '【'.t($sina_vp_type).'】';
	$output .= t('<a href="@user">@'.user_load($node->uid)->name.' </a>',array('@user' => url('user/').$node->uid));
	return $output;
} 

/**
 * 通过节点/评论/uid/微博昵称 获取用户微博uid
 * 用户是否绑定了新浪微博，0 未绑定。
 */
function sina_vp_get_sina_uid($params=NULL){ //暂时实现 节点/评论/uid/
	if($params){
		$uid = is_object($params)?$params->uid:$params;
	}else{
		global $user;
		$uid = $user->uid;
	}
	
	$data = db_fetch_object(db_query('SELECT sina_uid FROM {sina_open_user} WHERE uid = %d', $uid));
  
  if (isset($data->sina_uid)){
    return $data->sina_uid;
  } else {
    drupal_set_message('获取用户sina_uid失败或未绑定新浪微博！', 'warning');
		return 0;
  }
} 
/**
 * @Implement of hook_user()
 */
function sina_vp_user($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'load':
			break;  
		case 'insert':
			if(!empty($edit) && !empty($account) )
			  {
			    //$node = array('uid' => $account->uid, 'title' => $edit['realname']?$edit['realname']:$account->name, 'name' => (isset($account->name) ? $account->name : ''), 'type' => 'profile', 'language' => '');
			    //$node = node_submit($node);
			    //node_save($node);
			  }
		break;
		case 'login': //第一次登陆会比较慢～！抓取头像上传本站。load？			
			global $user;//like $user->picture=='http://tp2.sinaimg.cn/1801497981/50/1297470438/1'
			$pattern = "/^http\:\/\//";
			$subject = $user->picture;
			if(preg_match($pattern, $subject)){
				$pattern="/\/50\//";
				$user->picture = preg_replace($pattern, "/180/", $user->picture);	
				$string = file_get_contents($user->picture);
				$user_picture_path = variable_get('user_picture_path', '');
				$user->picture = "sites/default/files/$user_picture_path/picture-$user->uid.jpg";
				$handle = fopen($user->picture, "w+");
				fwrite ( $handle , $string );
        drupal_write_record('users', $user, 'uid');
			}
			if(!$user->signature &&($params['user_id'] = sina_vp_get_sina_uid($account->uid))){
				//$params['user_id'] = sina_vp_get_sina_uid($account->uid);
				//$params['user_id'] = sina_vp_get_sina_uid($account->uid);
				//按用户ID或昵称返回用户资料以及用户的最新发布的一条微博消息。
				$request_url = 'http://api.t.sina.com.cn/users/show.json';
				$result = sina_open_t_set_request($request_url,$params);
				
				if ($result->code == 200) {					        
	        $user->signature = json_decode($result->data)->description;
	      }else {
	        drupal_set_message('个性签名获取失败', 'error');
	      }
				drupal_write_record('users', $user, 'uid');
			}
			if(sina_vp_get_sina_uid()){//用户绑定了新浪微博
				$category = 'Personal information';
				$params['user_id'] = sina_vp_get_sina_uid($account->uid);
				profile_load_profile(&$user);
				if(!$user->profile_sex)$donext=TRUE;
				//按用户ID或昵称返回用户资料以及用户的最新发布的一条微博消息。
				$request_url = 'http://api.t.sina.com.cn/users/show.json';
				$result = sina_open_t_set_request($request_url,$params);				
			}			
			if($donext && $result->code == 200) {//暂无用，以后扩展资料
				if(!$user->profile_sex){
					switch (json_decode($result->data)->gender) {
						case 'm':
							$edit['profile_sex'] = t('男');
							break;
						case 'f':
							$edit['profile_sex'] = t('女');
							break;
						default:
							$edit['profile_sex'] = t('保密');
							break;
					}
				}
				if(!$user->profile_url){$edit['profile_url'] = json_decode($result->data)->url;}
				if(!$user->profile_location){$edit['profile_location'] = json_decode($result->data)->location;}
				if(!$user->profile_province){$edit['profile_province'] = json_decode($result->data)->province;}
				if(!$user->profile_city){$edit['profile_city'] = json_decode($result->data)->city;}
				if($edit['profile_province'] && $edit['profile_city']){//is_numeric($edit['profile_province']) || is_numeric($edit['profile_city'])
					$request_url = 'http://api.t.sina.com.cn/provinces.json';
					$result = sina_open_t_set_request($request_url);
					$data = json_decode($result->data)->provinces;
					foreach($data as $key=>$value){
						if($value->id==$edit['profile_province']){$province_name=$value->name;$city_array=$value->citys;}
					}					
					foreach($city_array as $key=>$value){
						foreach($value as $key2=>$city){						
							if($key2==$edit['profile_city']){$city_name=$city;}
						}
					}
					$edit['profile_province'] = $province_name;
					$edit['profile_city'] = $city_name;
				}
				profile_save_profile(&$edit, &$user, $category, $register = FALSE);
      }
			//登录跳转
			drupal_goto('UCenter');
    break;
 		case 'delete':
		break;
			// User is registering.
		case 'register':
		// Add a fieldset containing radio buttons to the
		// user registration form.
			 
			$fields['legal_agreement']['decision'] = array(
			'#type' => 'checkbox',			
			'#required' => TRUE,
			'#title' => t('我同意《'.l('微铺街管理协议','#').'》.'),
			'#default_value' => 1,
			
			);
			$fields['legal_agreement']['#weight']= 99;
			return $fields;
		 
		// Field values for registration are being checked.
		// (Also called when user edits his/her 'my account' page, but
		// $edit['decision'] is not set in that case.)
		case 'validate':
		// Make sure the user selected radio button 1 ('I agree').
		// the validate op is reused when a user updates information on
		// The 'my account' page, so we use isset() to test whether we are
		// on the registration page where the decision field is present.
			if (isset($edit['decision']) && $edit['decision'] != '1') {
				form_set_error('decision', t('You must agree to the Legal Agreement before registration can be completed.'));
			}
			return;
  }
}

/*
 * - MODULE_preprocess_HOOK(&$variables)
 *   This is for modules that want to alter or provide extra variables for
 *   theming hooks not registered to itself. For example, if a module named
 *   "foo" wanted to alter the $submitted variable for the hook "node" a
 *   preprocess function of foo_preprocess_node() can be created to intercept
 *   and alter the variable.
 *
 */
function sina_vp_preprocess_user_picture(&$variables) {
	if(arg(0)=='user'){return $variables;}//个人中心显示大图，其他则处理
  $variables['picture'] = '';
  if (variable_get('user_pictures', 0)) {
    $account = $variables['account'];
    /*if (!empty($account->picture) && file_exists($account->picture)) { //把180大图片缓存50小头像
    	$user_picture_path = variable_get('user_picture_path', '');
			$filepath="sites/default/files/imagecache/photo_50/$user_picture_path/picture-$account->uid.jpg";
      //file_get_contents($filepath);//访问imagecache路径生成小图片
      if(!(file_exists($filepath))){
					// create a new cURL resource
				$ch = curl_init();				
				// set URL and other appropriate options
				curl_setopt($ch, CURLOPT_URL, "http://dev.weipujie.com/?q=zh-hans/$filepath");
				curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
				// grab URL and pass it to the browser
				curl_exec($ch);				
				// close cURL resource, and free up system resources
				curl_close($ch);	
			}
      $picture = file_create_url($filepath);			
    }elseif (variable_get('user_picture_default', '')) {
      $picture = variable_get('user_picture_default', '');
    }*/
    if (!empty($account->picture) && file_exists($account->picture)) {
      $picture = file_create_url($account->picture);
    }
    else if (variable_get('user_picture_default', '')) {
      $picture = variable_get('user_picture_default', '');
    }
    if (isset($picture)) {
      $alt = t("@user's picture", array('@user' => $account->name ? $account->name : variable_get('anonymous', t('Anonymous'))));
      $attributes = array('width' => '80px','height' => '80px');
      $variables['picture'] = theme('image', $picture, $alt, $alt, $attributes, FALSE);
      if (!empty($account->uid) && user_access('access user profiles')) {
        $attributes = array('attributes' => array('title' => t('View user profile.')), 'html' => TRUE);
        $variables['picture'] = l($variables['picture'], "user/$account->uid", $attributes);
      }
    }
  }
}
//评论输出  vp/comment_ajax/...
//
/**
 * This function is responsible for generating a comment reply form.
 * There are several cases that have to be handled, including:
 *   - replies to comments
 *   - replies to nodes
 *   - attempts to reply to nodes that can no longer accept comments
 *   - respecting access permissions ('access comments', 'post comments', etc.)
 *
 * The node or comment that is being replied to must appear above the comment
 * form to provide the user context while authoring the comment.
 *
 * @param $node
 *   Every comment belongs to a node. This is that node.
 *
 * @param $pid
 *   Some comments are replies to other comments. In those cases, $pid is the parent
 *   comment's cid.
 *
 * @return
 *   The rendered parent node or comment plus the new comment form.
 */
function comment_render_4vp($node, $cid = 0,$return=json) {
  global $user;


  $output = '';
  if (user_access('access comments')) {
    // Pre-process variables.
    $nid = $node->nid;
    if (empty($nid)) {
      $nid = 0;
    }

    $mode = _comment_get_display_setting('mode', $node);
    $order = _comment_get_display_setting('sort', $node);
    $comments_per_page = _comment_get_display_setting('comments_per_page', $node);
		///////////////////////////////////////
		///针对微博显示页的，评论直接显示出来了，只需要显示 评论框即可。
		if(arg(3)=='no_comments'){//去掉node/256页上的link 喜欢(1) 转发分享
			//if(node_load(arg(1))->nid){//存在该节点
					if (user_access('post comments') && node_comment_mode($nid) == COMMENT_NODE_READ_WRITE && (variable_get('comment_form_location_'. $node->type, COMMENT_FORM_SEPARATE_PAGE) == COMMENT_FORM_BELOW) && !$reply) {
			      $output = comment_form_box(array('nid' => $nid), '');
			    }
			 return drupal_json(array('status' => TRUE, 'data' =>theme('status_messages').$output));
			//}
		}
		///////////////////////////////////////
    if ($cid && is_numeric($cid)) {
      // Single comment view.
      $query = 'SELECT c.cid, c.pid, c.nid, c.subject, c.comment, c.format, c.timestamp, c.name, c.mail, c.homepage, u.uid, u.name AS registered_name, u.signature, u.signature_format, u.picture, u.data, c.status FROM {comments} c INNER JOIN {users} u ON c.uid = u.uid WHERE c.cid = %d';
      $query_args = array($cid);
      if (!user_access('administer comments')) {
        $query .= ' AND c.status = %d';
        $query_args[] = COMMENT_PUBLISHED;
      }

      $query = db_rewrite_sql($query, 'c', 'cid');
      $result = db_query($query, $query_args);

      if ($comment = db_fetch_object($result)) {
        $comment->name = $comment->uid ? $comment->registered_name : $comment->name;
        $links = module_invoke_all('link', 'comment', $comment, 1);
        drupal_alter('link', $links, $node, $comment);

        $output .= theme('comment_view', $comment, $node, $links);
      }
    }
    else {
      // Multiple comment view
      $query_count = 'SELECT COUNT(*) FROM {comments} c WHERE c.nid = %d';
      $query = 'SELECT c.cid as cid, c.pid, c.nid, c.subject, c.comment, c.format, c.timestamp, c.name, c.mail, c.homepage, u.uid, u.name AS registered_name, u.signature, u.signature_format, u.picture, u.data, c.thread, c.status FROM {comments} c INNER JOIN {users} u ON c.uid = u.uid WHERE c.nid = %d';

      $query_args = array($nid);
      if (!user_access('administer comments')) {
        $query .= ' AND c.status = %d';
        $query_count .= ' AND c.status = %d';
        $query_args[] = COMMENT_PUBLISHED;
      }

      if ($order == COMMENT_ORDER_NEWEST_FIRST) {
        if ($mode == COMMENT_MODE_FLAT_COLLAPSED || $mode == COMMENT_MODE_FLAT_EXPANDED) {
          $query .= ' ORDER BY c.cid DESC';
        }
        else {
          $query .= ' ORDER BY c.thread DESC';
        }
      }
      else if ($order == COMMENT_ORDER_OLDEST_FIRST) {
        if ($mode == COMMENT_MODE_FLAT_COLLAPSED || $mode == COMMENT_MODE_FLAT_EXPANDED) {
          $query .= ' ORDER BY c.cid';
        }
        else {
          // See comment above. Analysis reveals that this doesn't cost too
          // much. It scales much much better than having the whole comment
          // structure.
          $query .= ' ORDER BY SUBSTRING(c.thread, 1, (LENGTH(c.thread) - 1))';
        }
      }
      $query = db_rewrite_sql($query, 'c', 'cid');
      $query_count = db_rewrite_sql($query_count, 'c', 'cid');

      // Start a form, for use with comment control.
      $result = pager_query($query, $comments_per_page, 0, $query_count, $query_args);

      $divs = 0;
      $num_rows = FALSE;
      $comments = '';
      drupal_add_css(drupal_get_path('module', 'comment') .'/comment.css');
      while ($comment = db_fetch_object($result)) {
        $comment = drupal_unpack($comment);
        $comment->name = $comment->uid ? $comment->registered_name : $comment->name;
        $comment->depth = count(explode('.', $comment->thread)) - 1;

        if ($mode == COMMENT_MODE_THREADED_COLLAPSED || $mode == COMMENT_MODE_THREADED_EXPANDED) {
          if ($comment->depth > $divs) {
            $divs++;
            $comments .= '<div class="indented">';
          }
          else {
            while ($comment->depth < $divs) {
              $divs--;
              $comments .= '</div>';
            }
          }
        }

        if ($mode == COMMENT_MODE_FLAT_COLLAPSED) {
          $comments .= theme('comment_flat_collapsed', $comment, $node);
        }
        else if ($mode == COMMENT_MODE_FLAT_EXPANDED) {
          $comments .= theme('comment_flat_expanded', $comment, $node);
        }
        else if ($mode == COMMENT_MODE_THREADED_COLLAPSED) {
          $comments .= theme('comment_thread_collapsed', $comment, $node);
        }
        else if ($mode == COMMENT_MODE_THREADED_EXPANDED) {
          $comments .= theme('comment_thread_expanded', $comment, $node);
        }

        $num_rows = TRUE;
      }
      while ($divs-- > 0) {
        $comments .= '</div>';
      }

      $comment_controls = variable_get('comment_controls_'. $node->type, COMMENT_CONTROLS_HIDDEN);
      if ($num_rows && ($comment_controls == COMMENT_CONTROLS_ABOVE || $comment_controls == COMMENT_CONTROLS_ABOVE_BELOW)) {
        $output .= drupal_get_form('comment_controls', $mode, $order, $comments_per_page);
      }

      $output .= $comments;
      //$output .= theme('pager', NULL, $comments_per_page, 0);
      $output .=l('查看更多','node/'.$nid);

      if ($num_rows && ($comment_controls == COMMENT_CONTROLS_BELOW || $comment_controls == COMMENT_CONTROLS_ABOVE_BELOW)) {
        $output .= drupal_get_form('comment_controls', $mode, $order, $comments_per_page);
      }
    }

    // If enabled, show new comment form if it's not already being displayed.
    $reply = arg(0) == 'comment' && arg(1) == 'reply';
    if (user_access('post comments') && node_comment_mode($nid) == COMMENT_NODE_READ_WRITE && (variable_get('comment_form_location_'. $node->type, COMMENT_FORM_SEPARATE_PAGE) == COMMENT_FORM_BELOW) && !$reply) {
      $output = comment_form_box(array('nid' => $nid), '点评').$output;
    }

    if ($output) {
      $output = theme('comment_wrapper', $output, $node);
    }
  }

  //return $output;
  if($return=='json'){return drupal_json(array('status' => TRUE, 'data' =>theme('status_messages').$output));}
	else{return $output;}
	//drupal_json($output); // $output='';//
}

function weibo_ajax_forward(&$form_state,$node) {
	//注释从这里开始。
			$share_sql = "SELECT count(*) FROM  {sina_vp_weibo2node} WHERE  `zid` =$node->nid AND  `cid` =0";
			$share_counts = db_result(db_query($share_sql));
			
			if (user_access('create weibo content')) {
					$taxonomys = $node->taxonomy;
					foreach($taxonomys as $key=>$obj){
						if($obj->vid==2){
							$taxonomy_name=$obj->name;
							$taxonomy_id = 		$obj->tid;	
						}
					}
		
				$form['forward'] = array(
				  '#type' => 'checkbox',
				  '#title' => t('分享').'('.$share_counts.')',
				  '#prefix' => '<a href="javascript:toggleit('.$node->nid.');"  class="hidden_next_input">',
			    '#suffix' => '</a>',
				  '#ahah' => array(
				    'path' => "forward/$taxonomy_id/$node->nid/ajax", //含参数的调用。
				    'wrapper' => 'Wrap_'.$node->nid,//Wrap_288
				    'effect' => 'fade',
						)
				);
			}
			if (user_access('post comments')) {
				$form['add_comment'] = array(
				  '#type' => 'checkbox',
				  '#title' => t('点评').'('.$node->comment_count.') · ',
				  '#prefix' => '<a href="javascript:toggleit('.$node->nid.');"  class="hidden_next_input">',
			    '#suffix' => '</a>',	
				  '#ahah' => array(
				    'path' => 'vp/comment_ajax/'.$node->nid, //含参数的调用。
				    'wrapper' => 'Wrap_'.$node->nid,
				    'effect' => 'fade',
						)
				);
				if(arg(0)=='node'){//节点展示页 评论 ahah不带其他comments
					$form['add_comment'] = array(
				  '#type' => 'checkbox',
				  '#title' => t('点评').'('.$node->comment_count.')',
				  '#prefix' => '<a href="javascript:toggleit('.$node->nid.');"  class="hidden_next_input">',
			    '#suffix' => '</a>',	
				  '#ahah' => array(
				    'path' => 'vp/comment_ajax/'.$node->nid.'/no_comments', //含参数的调用。
				    'wrapper' => 'Wrap_'.$node->nid,
				    'effect' => 'fade',
						)
				);
				}
			}
			$form['textfields'] = array(
			    '#type' => 'item', //item 
			    '#title' => t('loagind...'),
			    '#prefix' => '<div id="Wrap_'.$node->nid.'" class="ajax talkWrap hidden">',
			    '#suffix' => '</div>',			    
			    //'#description' => t('Loading'),
			  );
			return $form;
}

/**
 *获取用户是否使用邀请码了
 */
function regcode_user_load($account=NULL) {
	if(!$account){global $user;$account=$user;}
	$res = db_query('SELECT code FROM {regcode} WHERE uid='.$account->uid.' LIMIT 1');
   $regcode = db_result($res);
  return $regcode;
}
/**
 * 获取用户绑定的微博基本信息
 */
function sina_vp_t_get_info($ac=NULL) {
	if(!$ac){global $user;$ac=$user;}
  $data = db_fetch_object(db_query('SELECT uid, token FROM {sina_open_user} WHERE uid = %d', $ac->uid));
  if (!isset($data->uid)) {
  	$return = array('sina'=>'0'); 
  }else{
  	 $return = array('sina'=>'1');
  }	
	return $return;
}
/**
 * 话题与@内容处理
 * task_id = 27
 */
function sina_vp_content_process($body){
	$tag_pattern = "/\#([^\#|.]+)\#/";
	preg_match_all($tag_pattern, $body, $tagsarr);
	$tags = implode(',',$tagsarr[1]);
	$user_pattern = "/\@([a-zA-z0-9_]+)/";
	$body = preg_replace($user_pattern, '<a href="'.$_SERVER["HTTP_REFERER"].'/${1}">@${1}</a>', $body );
	$body = preg_replace($tag_pattern, '<a href="'.$_SERVER["HTTP_REFERER"].'/search?q=#${1}">#${1}#</a>', $body);
	return $body;
}
//用户推荐 输出函数。
/**
 * 输入，$result && $row['uid']
 * return $output html
 */
function sina_vp_recommend($results,$account,$type='focus'){
	$warp_begin ='<div class="vp-rec-wrap">';
									$warp_end ='<div class="clear"></div>
																<div class="dpvp-more">
																	<!--span class="vp-recommend"><a href="javascript:void(0)"><<上一批</a></span-->
																	<a href="javascript:void(0)">换一批>></a>
																</div>
																<div class="tjvp-xyb">'.l('下一步','vp_recommend_user').'</div>	
															</div>';
									$count =1;//1--18
									$count2 = 3;//换3批
									while($count<=18){//
										$row = db_fetch_array($results);
										if($row['uid']){
											$account = user_load($row['uid']);		
											if($account->picture==''){$account->picture=variable_get(user_picture_default, '/sites/default/files/users/0.gif');}
											$output.='<div class="dpdianpu-content odd">
															<div class="dpdianpu-pic">'.
															l(theme('imagecache', '65x65', $account->picture, $account->name, $account->name, array('class'=>'vp-user-picture')),"UCenter/0/$account->uid",array('html'=>TRUE,'attributes'=>array('class'=>'Buyer-user-link')))
															.'</div>
															<div class="dpdianpu-xx">
																<p class="dpdpname">'.l($account->name,"UCenter/0/$account->uid").'</p>
																<p class="dpdpgg">'.($account->signature?$account->signature:'暂无介绍').'</p>
															</div>
															<div class="dpdianpu-dy">
																<p>'.user_relationships_load(array("requestee_id" => $account->uid),array("count" => TRUE)).'</p>
																';
															 $my_follows =	user_relationships_load( array("between" => array($account->uid, $user->uid)),array("include_user_info" => TRUE));//获取当前用户与该卖家的关系
															 $follow_status=0;
																if(count($my_follows)){
																	$follow_status=1; //已关注	
																}
															 $options = sina_vp_follow_toggle_options($type);
															 global $user;
											         if($account->uid<>$user->uid && !in_array('Seller',$user->roles)){		//卖家查看卖家/自己，不可进行粉丝操作。 			
																$output.='<span class="focus-action focus-status focus-action-do">';
																foreach (array_keys($options) as $key) {
															    $output.= fasttoggle2($options[$key][$follow_status], 'follow_toggle/'. $account->uid .'/'. $options[$key]['0'] , TRUE, $key .'_'. $user->uid, 'fasttoggle-status-user-'. $key .'-'. $follow_status,$account->uid);
															 	} 
																$output.='</span>';
															}					
										$output.='</div>						
														</div>';
									}else{
										$output .='<div class="dpdianpu-content odd">
												<div class="dpdianpu-pic"><a class="Buyer-user-link" href="/?q=UCenter">
												<img width="65" height="65" class="vp-user-picture"  src="http://dev.weipujie.com/?q=sites/default/files/imagecache/65x65/users/0.gif"></a></div>
												<div class="dpdianpu-xx">
													<p class="dpdpname"><a href="/?q=UCenter">卖家名字</a></p>
													<p class="dpdpgg">个性签名显示示例</p>
												</div>
												<div class="dpdianpu-dy">
													<p>4</p>
														<span class="focus-action focus-status focus-action-do">+订阅</span>
												</div>						
										</div>';
									}
									if($count%6==0){
										$output1 .= $warp_begin.$output.$warp_end;
										$count2--;
										$output ='';
									}
									$count++;
								}
								return $output1;$output1='';$output ='';
}
/**
 * @} End of "sina.module".
 */
